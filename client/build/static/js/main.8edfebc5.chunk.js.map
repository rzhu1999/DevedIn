{"version":3,"sources":["actions/types.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/layout/no-brain-loading.gif","components/layout/Spinner.js","components/dashboard/DashboardAction.js","actions/profile.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/profiles/Developers.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/routing/PrivateRoute.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_PROFILE","GET_PROFILES","GET_REPOS","UPDATE_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","ACCOUNT_DELETED","GET_POSTS","GET_POST","POST_ERROR","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","UPDATE_LIKES","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","localStorage","setItem","removeItem","loadUser","a","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","minLength","login","required","alerts","alert","map","Spinner","src","spinner","style","width","margin","display","alt","DashboardAction","getCurrentProfile","statusText","status","getProfiles","createProfile","history","edit","push","deleteExperience","delete","experience","experiences","exp","company","title","format","from","_id","deleteEducation","education","educations","edu","school","degree","fieldofstudy","gpa","profile","deleteAccount","window","confirm","user","useEffect","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","initialState","profileData","key","social","Array","isArray","join","addExperience","put","form","current","description","toDateDisabled","toggleDisabled","class","disabled","checked","cols","rows","addEducation","ProfileItem","avatar","slice","skill","index","profiles","length","ProfileTop","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","Component","component","rest","render","props","alertReducer","action","filter","getItem","authReducer","profileReducer","postReducer","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","currentState","getState","subscribe","previousState","App","exact","path","Landing","Register","Login","Profiles","Profile","Developers","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","document","getElementById"],"mappings":"6NAAaA,EAAY,YACZC,EAAe,eAEfC,EAAmB,mBACnBC,EAAgB,gBAEhBC,EAAc,cACdC,EAAa,aACbC,EAAgB,gBAChBC,EAAa,aACbC,EAAS,SAETC,EAAc,cACdC,EAAe,eACfC,EAAY,YACZC,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAgB,gBAEhBC,EAAkB,kBAElBC,EAAY,YACZC,EAAW,WACXC,EAAa,aACbC,EAAc,cACdC,EAAW,WAEXC,EAAc,cACdC,EAAiB,iBAEjBC,EAAe,eC3BfC,EACT,SAACC,EAAKC,GAAN,IAAiBC,EAAjB,uDAA2B,IAA3B,OACA,SAACC,GACG,IAAMC,EAAKC,cACXF,EAAS,CACLG,KAAM/B,EACNgC,QAAS,CAAEP,MAAKC,YAAWG,QAG/BI,YACI,kBAAML,EAAS,CAAEG,KAAM9B,EAAc+B,QAASH,MAC9CF,KCFGO,EAVM,SAACC,GACdA,GACAC,IAAMC,SAASC,QAAQC,OAAO,gBAAkBJ,EAChDK,aAAaC,QAAQ,QAASN,YAEvBC,IAAMC,SAASC,QAAQC,OAAO,gBACrCC,aAAaE,WAAW,WCQnBC,EAAW,yDAAM,WAAOf,GAAP,eAAAgB,EAAA,0DACtBJ,aAAaL,MADS,iCAGlBD,EAAaM,aAAaL,OAHR,SAIAC,IAAMS,IAAI,aAJV,OAIZC,EAJY,OAKlBlB,EAAS,CACLG,KAAM3B,EACN4B,QAASc,EAAIC,OAPC,gDAUlBnB,EAAS,CACLG,KAAM1B,IAXQ,gCAetBuB,EAAS,CACLG,KAAM1B,IAhBY,yDAAN,uD,OCiFT2C,eAJS,SAACC,GAAD,MAAY,CAChCC,KAAMD,EAAMC,QAGwB,CAAEC,ODQpB,kBAAM,SAACvB,GACzBA,EAAS,CAAEG,KAAMjB,IACjBc,EAAS,CAAEG,KAAMvB,OCVNwC,EA3FA,SAAC,GAAoD,IAAD,IAAjDE,KAAQE,EAAyC,EAAzCA,gBAAiBC,EAAwB,EAAxBA,QAAWF,EAAa,EAAbA,OAC5CG,EACF,+BACI,+BACI,eAAC,IAAD,CAAMC,GAAG,SAAT,UACI,mBAAGC,UAAU,sBAAuB,IACpC,sBAAMA,UAAU,UAAhB,sBACI,OAEZ,+BACI,eAAC,IAAD,CAAMD,GAAG,cAAT,UACI,mBAAGC,UAAU,gBAAiB,IAC9B,sBAAMA,UAAU,UAAhB,2BACI,OAGZ,+BACI,eAAC,IAAD,CAAMD,GAAG,YAAT,UACI,mBAAGC,UAAU,iBAAkB,IAC/B,sBAAMA,UAAU,UAAhB,0BACI,OAGZ,+BACI,eAAC,IAAD,CAAMD,GAAG,aAAT,UACI,mBAAGC,UAAU,gBAAiB,IAC9B,sBAAMA,UAAU,UAAhB,0BACI,OAEZ,6BACI,oBAAGC,QAASN,EAAQO,KAAK,KAAzB,UACI,mBAAGF,UAAU,wBAA2B,IACxC,sBAAMA,UAAU,UAAhB,4BAMVG,EACF,+BACI,+BACI,eAAC,IAAD,CAAMJ,GAAG,cAAT,UACI,mBAAGC,UAAU,gBAAiB,IAC9B,sBAAMA,UAAU,UAAhB,2BACI,IACR,eAAC,IAAD,CAAMD,GAAG,YAAT,UACI,mBAAGC,UAAU,iBAAkB,IAC/B,sBAAMA,UAAU,UAAhB,0BACI,OAEZ,6BACI,eAAC,IAAD,CAAMD,GAAG,YAAT,UACK,IACD,mBAAGC,UAAU,mBAAb,eAFJ,iBAKJ,6BACI,eAAC,IAAD,CAAMD,GAAG,SAAT,UACK,IACD,mBAAGC,UAAU,aAAb,eAFJ,iBAQZ,OACI,sBAAKA,UAAU,oBAAf,UACI,6BACI,eAAC,IAAD,CAAMD,GAAG,IAAT,UACI,mBAAGC,UAAU,mBADjB,iBAIFH,GACE,eAAC,WAAD,WACK,IACAD,EAAkBE,EAAYK,EAAY,aCzChDX,eAJS,SAACC,GAAD,MAAY,CAChCG,gBAAiBH,EAAMC,KAAKE,mBAGjBJ,EAnCC,SAAC,GACb,OADqC,EAAtBI,gBAEJ,cAAC,IAAD,CAAUG,GAAG,eAGpB,yBAASC,UAAU,UAAnB,SACI,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,oBAAIA,UAAU,UAAd,qBACA,mBAAGA,UAAU,OAAb,iGAIA,sBAAKA,UAAU,UAAf,UACI,cAAC,IAAD,CAAMD,GAAG,YAAYC,UAAU,kBAA/B,qBAGA,cAAC,IAAD,CAAMD,GAAG,SAASC,UAAU,gBAA5B,gC,uBCkHTR,eAJS,SAACC,GAAD,MAAY,CAChCG,gBAAiBH,EAAMC,KAAKE,mBAGQ,CAAE5B,WAAUoC,SHjGhD,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,8CACA,WAAOnC,GAAP,qBAAAgB,EAAA,6DACUoB,EAAS,CACX1B,QAAS,CACL,eAAgB,qBAIlB2B,EAAOC,KAAKC,UAAU,CAAEN,OAAMC,QAAOC,aAP/C,kBAU0B3B,IAAMgC,KAAK,YAAaH,EAAMD,GAVxD,OAUclB,EAVd,OAYQlB,EAAS,CACLG,KAAM7B,EACN8B,QAASc,EAAIC,OAEjBnB,EAASe,KAhBjB,mDAkBc0B,EAAS,KAAIC,SAASvB,KAAKsB,SAG7BA,EAAOE,SAAQ,SAACC,GAAD,OACX5C,EAASJ,EAASgD,EAAM/C,IAAK,cAIrCG,EAAS,CACLG,KAAM5B,IA3BlB,0DADA,wDGiGW6C,EA9HE,SAAC,GAA6C,IAA3CxB,EAA0C,EAA1CA,SAAUoC,EAAgC,EAAhCA,SAAUR,EAAsB,EAAtBA,gBACpC,EAAgCqB,mBAAS,CACrCZ,KAAM,GACNC,MAAO,GACPC,SAAU,GACVW,UAAW,KAJf,mBAAOC,EAAP,KAAiBC,EAAjB,KAOQf,EAAqCc,EAArCd,KAAMC,EAA+Ba,EAA/Bb,MAAOC,EAAwBY,EAAxBZ,SAAUW,EAAcC,EAAdD,UAEzBG,EAAW,SAACC,GAAD,OACbF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAEnDC,EAAQ,uCAAG,WAAOH,GAAP,SAAAlC,EAAA,sDACbkC,EAAEI,iBACEnB,IAAaW,EACblD,EAAS,yBAA0B,UAuBnCoC,EAAS,CAAEC,OAAMC,QAAOC,aA1Bf,2CAAH,sDA8Bd,OAAIX,EACO,cAAC,IAAD,CAAUG,GAAG,eAIpB,eAAC,WAAD,WACI,oBAAIC,UAAU,qBAAd,SACI,8CAEJ,oBAAGA,UAAU,OAAb,UACI,mBAAGA,UAAU,gBAAb,eADJ,0BAGA,uBAAMA,UAAU,OAAOyB,SAAU,SAACH,GAAD,OAAOG,EAASH,IAAjD,UACI,qBAAKtB,UAAU,aAAf,SACI,uBACIzB,KAAK,OACLoD,YAAY,OACZtB,KAAK,OACLmB,MAAOnB,EACPgB,SAAU,SAACC,GAAD,OAAOD,EAASC,QAKlC,sBAAKtB,UAAU,aAAf,UACI,uBACIzB,KAAK,QACLoD,YAAY,gBACZtB,KAAK,QACLmB,MAAOlB,EACPe,SAAU,SAACC,GAAD,OAAOD,EAASC,MAG9B,uBAAOtB,UAAU,YAAjB,2FAMJ,qBAAKA,UAAU,aAAf,SACI,uBACIzB,KAAK,WACLoD,YAAY,WACZtB,KAAK,WACLmB,MAAOjB,EACPqB,UAAU,IACVP,SAAU,SAACC,GAAD,OAAOD,EAASC,QAIlC,qBAAKtB,UAAU,aAAf,SACI,uBACIzB,KAAK,WACLoD,YAAY,mBACZtB,KAAK,YACLmB,MAAON,EACPU,UAAU,IACVP,SAAU,SAACC,GAAD,OAAOD,EAASC,QAIlC,uBAAO/C,KAAK,SAASiD,MAAM,WAAWxB,UAAU,eAEpD,oBAAGA,UAAU,OAAb,qCAC6B,IACzB,cAAC,IAAD,CAAMD,GAAG,SAASC,UAAU,gBAA5B,8BCfDR,eAJS,SAACC,GAAD,MAAY,CAChCG,gBAAiBH,EAAMC,KAAKE,mBAGQ,CAAEiC,MJ9BrB,SAACvB,EAAOC,GAAR,8CAAqB,WAAOnC,GAAP,qBAAAgB,EAAA,6DAChCoB,EAAS,CACX1B,QAAS,CACL,eAAgB,qBAIlB2B,EAAOC,KAAKC,UAAU,CAAEL,QAAOC,aAPC,kBAUhB3B,IAAMgC,KAAK,YAAaH,EAAMD,GAVd,OAU5BlB,EAV4B,OAYlClB,EAAS,CACLG,KAAMzB,EACN0B,QAASc,EAAIC,OAGjBnB,EAASe,KAjByB,mDAmB5B0B,EAAS,KAAIC,SAASvB,KAAKsB,SAG7BA,EAAOE,SAAQ,SAACC,GAAD,OAAW5C,EAASJ,EAASgD,EAAM/C,IAAK,cAG3DG,EAAS,CACLG,KAAMxB,IA1BwB,0DAArB,wDI8BNyC,EA/FD,SAAC,GAAgC,IAA9BqC,EAA6B,EAA7BA,MAAOjC,EAAsB,EAAtBA,gBACpB,EAAgCqB,mBAAS,CACrCX,MAAO,GACPC,SAAU,KAFd,mBAAOY,EAAP,KAAiBC,EAAjB,KAKQd,EAAoBa,EAApBb,MAAOC,EAAaY,EAAbZ,SAETc,EAAW,SAACC,GAAD,OACbF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAEnDC,EAAQ,uCAAG,WAAOH,GAAP,SAAAlC,EAAA,sDACbkC,EAAEI,iBAsBFG,EAAMvB,EAAOC,GAvBA,2CAAH,sDA2Bd,OAAIX,EACO,cAAC,IAAD,CAAUG,GAAG,eAIpB,eAAC,WAAD,WACI,oBAAIC,UAAU,qBAAd,SACI,8CAEJ,oBAAGA,UAAU,OAAb,UACI,mBAAGA,UAAU,gBAAb,eADJ,6BAGA,uBAAMA,UAAU,OAAOyB,SAAU,SAACH,GAAD,OAAOG,EAASH,IAAjD,UACI,qBAAKtB,UAAU,aAAf,SACI,uBACIzB,KAAK,QACLoD,YAAY,gBACZtB,KAAK,QACLmB,MAAOlB,EACPe,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BQ,UAAQ,MAIhB,qBAAK9B,UAAU,aAAf,SACI,uBACIzB,KAAK,WACLoD,YAAY,WACZtB,KAAK,WACLmB,MAAOjB,EACPqB,UAAU,IACVP,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BQ,UAAQ,MAIhB,uBAAOvD,KAAK,SAASiD,MAAM,QAAQxB,UAAU,eAEjD,oBAAGA,UAAU,OAAb,mCAC2B,IACvB,cAAC,IAAD,CAAMD,GAAG,YAAYC,UAAU,gBAA/B,8BCnEDR,eAJS,SAACC,GAAD,MAAY,CAChCsC,OAAQtC,EAAMuC,SAGHxC,EAfD,SAAC,GAAD,SAAGuC,OACNE,KAAI,SAACD,GAAD,OACP,qBAAoBhC,UAAS,sBAAiBgC,EAAM9D,WAApD,SACK8D,EAAM/D,KADD+D,EAAM3D,UCNT,MAA0B,6CCa1B6D,EAVC,kBACZ,cAAC,WAAD,UACI,qBACIC,IAAKC,EACLC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,SAClDC,IAAI,kBCLHC,EAAkB,WAC3B,OACI,sBAAK1C,UAAU,eAAf,UACI,eAAC,IAAD,CAAMD,GAAG,gBAAgBC,UAAU,MAAnC,UACI,mBAAGA,UAAU,oCADjB,mBAGA,eAAC,IAAD,CAAMD,GAAG,kBAAkBC,UAAU,MAArC,UACI,mBAAGA,UAAU,kCADjB,qBAGA,eAAC,IAAD,CAAMD,GAAG,iBAAiBC,UAAU,MAApC,UACI,mBAAGA,UAAU,uCADjB,wB,oBCEC2C,GAAoB,yDAAM,WAAOvE,GAAP,eAAAgB,EAAA,+EAEbR,IAAMS,IAAI,mBAFG,OAEzBC,EAFyB,OAI/BlB,EAAS,CACLG,KAAMtB,EACNuB,QAASc,EAAIC,OANc,gDAS/BnB,EAAS,CACLG,KAAMlB,EACNmB,QAAS,CACLP,IAAK,KAAI6C,SAAS8B,WAClBC,OAAQ,KAAI/B,SAAS+B,UAbE,yDAAN,uDAoBpBC,GAAc,yDAAM,WAAO1E,GAAP,eAAAgB,EAAA,6DAC7BhB,EAAS,CAAEG,KAAMjB,IADY,kBAGPsB,IAAMS,IAAI,gBAHH,OAGnBC,EAHmB,OAKzBlB,EAAS,CACLG,KAAMrB,EACNsB,QAASc,EAAIC,OAPQ,gDAUzBnB,EAAS,CACLG,KAAMlB,EACNmB,QAAS,CACLP,IAAK,KAAI6C,SAAS8B,WAClBC,OAAQ,KAAI/B,SAAS+B,UAdJ,yDAAN,uDAmFdE,GACT,SAAC5B,EAAU6B,GAAX,IAAoBC,EAApB,sGACA,WAAO7E,GAAP,mBAAAgB,EAAA,sEAEcoB,EAAS,CACX1B,QAAS,CACL,eAAgB,qBAJhC,SAQ0BF,IAAMgC,KAAK,eAAgBO,EAAUX,GAR/D,OAQclB,EARd,OAUQlB,EAAS,CACLG,KAAMtB,EACNuB,QAASc,EAAIC,OAGjBnB,EACIJ,EACIiF,EAAO,kBAAoB,kBAC3B,YAIHA,GACDD,EAAQE,KAAK,cAvBzB,mDA0BcrC,EAAS,KAAIC,SAASvB,KAAKsB,SAG7BA,EAAOE,SAAQ,SAACC,GAAD,OACX5C,EAASJ,EAASgD,EAAM/C,IAAK,cAIrCG,EAAS,CACLG,KAAMlB,EACNmB,QAAS,CACLP,IAAK,KAAI6C,SAASvB,KAAKtB,IACvB4E,OAAQ,KAAI/B,SAAS+B,UAtCrC,0DADA,uDClEWrD,eAAQ,KAAM,CAAE2D,iBD4LC,SAAC9E,GAAD,8CAAQ,WAAOD,GAAP,eAAAgB,EAAA,+EAEdR,IAAMwE,OAAN,kCAAwC/E,IAF1B,OAE1BiB,EAF0B,OAIhClB,EAAS,CACLG,KAAMnB,EACNoB,QAASc,EAAIC,OAGjBnB,EAASJ,EAAS,qBAAsB,YATR,gDAWhCI,EAAS,CACLG,KAAMlB,EACNmB,QAAS,CACLP,IAAK,KAAI6C,SAASvB,KAAKtB,IACvB4E,OAAQ,KAAI/B,SAAS+B,UAfG,yDAAR,wDC5LjBrD,EA9CI,SAAC,GAAsC,IAApC6D,EAAmC,EAAnCA,WAAYF,EAAuB,EAAvBA,iBACxBG,EAAcD,EAAWpB,KAAI,SAACsB,GAAD,OAC/B,+BACI,6BAAKA,EAAIC,UACT,oBAAIxD,UAAU,UAAd,SAAyBuD,EAAIE,QAC7B,+BACI,cAAC,KAAD,CAAQC,OAAO,UAAf,SAA0BH,EAAII,OADlC,KACmD,IACnC,OAAXJ,EAAIxD,GACD,QAEA,cAAC,KAAD,CAAQ2D,OAAO,UAAf,SAA0BH,EAAIxD,QAGtC,6BACI,wBACIE,QAAS,kBAAMkD,EAAiBI,EAAIK,MACpC5D,UAAU,iBAFd,wBAZCuD,EAAIK,QAqBjB,OACI,eAAC,WAAD,WACI,oBAAI5D,UAAU,OAAd,oCACA,wBAAOA,UAAU,QAAjB,UACI,gCACI,+BACI,yCACA,oBAAIA,UAAU,UAAd,mBACA,oBAAIA,UAAU,UAAd,mBACA,4BAGR,gCAAQsD,aCeT9D,eAAQ,KAAM,CAAEqE,gBF8MA,SAACxF,GAAD,8CAAQ,WAAOD,GAAP,eAAAgB,EAAA,+EAEbR,IAAMwE,OAAN,iCAAuC/E,IAF1B,OAEzBiB,EAFyB,OAI/BlB,EAAS,CACLG,KAAMnB,EACNoB,QAASc,EAAIC,OAGjBnB,EAASJ,EAAS,oBAAqB,YATR,gDAW/BI,EAAS,CACLG,KAAMlB,EACNmB,QAAS,CACLP,IAAK,KAAI6C,SAASvB,KAAKtB,IACvB4E,OAAQ,KAAI/B,SAAS+B,UAfE,yDAAR,wDE9MhBrD,EAlDG,SAAC,GAAoC,IAAlCsE,EAAiC,EAAjCA,UAAWD,EAAsB,EAAtBA,gBACtBE,EAAaD,EAAU7B,KAAI,SAAC+B,GAAD,OAC7B,+BACI,6BAAKA,EAAIC,SACT,oBAAIjE,UAAU,UAAd,SAAyBgE,EAAIE,SAC7B,+BACI,cAAC,KAAD,CAAQR,OAAO,UAAf,SAA0BM,EAAIL,OADlC,KACmD,IACnC,OAAXK,EAAIjE,GACD,QAEA,cAAC,KAAD,CAAQ2D,OAAO,UAAf,SAA0BM,EAAIjE,QAGtC,6BAAKiE,EAAIG,eACT,6BAAKH,EAAII,MACT,6BACI,wBACInE,QAAS,kBAAM4D,EAAgBG,EAAIJ,MACnC5D,UAAU,iBAFd,wBAdCgE,EAAIJ,QAuBjB,OACI,eAAC,WAAD,WACI,oBAAI5D,UAAU,OAAd,mCACA,wBAAOA,UAAU,QAAjB,UACI,gCACI,+BACI,wCACA,oBAAIA,UAAU,UAAd,oBACA,oBAAIA,UAAU,UAAd,mBACA,oBAAIA,UAAU,UAAd,mBACA,oBAAIA,UAAU,UAAd,iBACA,4BAGR,gCAAQ+D,aC4BTvE,gBALS,SAACC,GAAD,MAAY,CAChCC,KAAMD,EAAMC,KACZ2E,QAAS5E,EAAM4E,WAGqB,CAAE1B,qBAAmB2B,cHmNhC,yDAAM,WAAOlG,GAAP,SAAAgB,EAAA,0DAC3BmF,OAAOC,QAAQ,yCADY,0CAGjB5F,IAAMwE,OAAN,gBAHiB,OAKvBhF,EAAS,CACLG,KAAMjB,IAGVc,EAAS,CACLG,KAAMhB,IAGVa,EAASJ,EAAS,+CAbK,gDAevBI,EAAS,CACLG,KAAMlB,EACNmB,QAAS,CACLP,IAAK,KAAI6C,SAASvB,KAAKtB,IACvB4E,OAAQ,KAAI/B,SAAS+B,UAnBN,yDAAN,wDGnNdrD,EA/DG,SAAC,GAKZ,IAJHmD,EAIE,EAJFA,kBACA2B,EAGE,EAHFA,cACQG,EAEN,EAFF/E,KAAQ+E,KAEN,IADFJ,QAAWA,EACT,EADSA,QAASxE,EAClB,EADkBA,QAMpB,OAJA6E,qBAAU,WACN/B,MACD,CAACA,IAEG9C,GAAuB,OAAZwE,EACd,cAAC,EAAD,IAEA,eAAC,WAAD,WACI,oBAAIrE,UAAU,mBAAd,uBACA,oBAAGA,UAAU,OAAb,UACI,mBAAGA,UAAU,oBADjB,iBACsD,IACjDyE,GAAQA,EAAKpE,KAFlB,QAKa,OAAZgE,EACG,eAAC,WAAD,WACK,IACD,cAAC,EAAD,IAAoB,IACpB,cAAC,GAAD,CAAYhB,WAAYgB,EAAQhB,aAChC,cAAC,GAAD,CAAWS,UAAWO,EAAQP,YAC9B,qBAAK9D,UAAU,OAAf,SACI,yBACIA,UAAU,iBACVC,QAAS,kBAAMqE,KAFnB,UAII,mBAAGtE,UAAU,sBAJjB,6BAUR,eAAC,WAAD,WACI,mBAAGA,UAAU,aAAb,uEAIA,cAAC,IAAD,CAAMD,GAAG,kBAAkBC,UAAU,sBAArC,qCC2JLR,eAAQ,KAAM,CAAEuD,kBAAhBvD,CAAiCmF,aAzM1B,SAAC,GAAgC,IAA9B5B,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,QACpC,EAAgC/B,mBAAS,CACrCuC,QAAS,GACToB,QAAS,GACTC,SAAU,GACVhC,OAAQ,GACRiC,OAAQ,GACRC,eAAgB,GAChBC,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,UAAW,KAZf,mBAAOlE,EAAP,KAAiBC,EAAjB,KAeA,EAAkDH,oBAAS,GAA3D,mBAAOqE,EAAP,KAA4BC,EAA5B,KAGI/B,EAUArC,EAVAqC,QACAqB,EASA1D,EATA0D,SACAhC,EAQA1B,EARA0B,OACAiC,EAOA3D,EAPA2D,OACAC,EAMA5D,EANA4D,eACAC,EAKA7D,EALA6D,IACAE,EAIA/D,EAJA+D,SACAC,EAGAhE,EAHAgE,SACAC,EAEAjE,EAFAiE,QACAC,EACAlE,EADAkE,UAGEhE,EAAW,SAACC,GAAD,OACbF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAOzD,OACI,eAAC,WAAD,WACI,oBAAIxB,UAAU,qBAAd,SACI,yDAEJ,oBAAGA,UAAU,OAAb,UACI,mBAAGA,UAAU,gBADjB,6BAGA,mBAAGA,UAAU,aAAb,iCACA,uBAAMA,UAAU,OAAOyB,SAAU,SAACH,GAAD,OAdxB,SAACA,GACdA,EAAEI,iBACFqB,EAAc5B,EAAU6B,GAYoBvB,CAASH,IAAjD,UACI,sBAAKtB,UAAU,aAAf,UACI,yBACIK,KAAK,SACLmB,MAAOqB,EACPxB,SAAU,SAACC,GAAD,OAAOD,EAASC,IAH9B,UAKI,wBAAQE,MAAM,IAAd,uDAGA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,0BAEJ,mBAAGxB,UAAU,aAAb,qDAIJ,qBAAKA,UAAU,aAAf,SACI,uBACIzB,KAAK,OACLoD,YAAY,mBACZtB,KAAK,UACLmB,MAAOgC,EACPnC,SAAU,SAACC,GAAD,OAAOD,EAASC,QAIlC,sBAAKtB,UAAU,aAAf,UACI,uBACIzB,KAAK,OACLoD,YAAY,WACZtB,KAAK,WACLhC,GAAG,GACHmD,MAAOqD,EACPxD,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE9B,mBAAGtB,UAAU,aAAb,yDAKJ,sBAAKA,UAAU,aAAf,UACI,uBACIzB,KAAK,OACLoD,YAAY,WACZtB,KAAK,SACLmB,MAAOsD,EACPzD,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE9B,mBAAGtB,UAAU,aAAb,2EAKJ,sBAAKA,UAAU,aAAf,UACI,uBACIzB,KAAK,OACLoD,YAAY,kBACZtB,KAAK,iBACLmB,MAAOuD,EACP1D,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE9B,mBAAGtB,UAAU,aAAb,qEAKJ,sBAAKA,UAAU,aAAf,UACI,0BACIzB,KAAK,OACLoD,YAAY,qBACZtB,KAAK,MACLmB,MAAOwD,EACP3D,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE9B,mBAAGtB,UAAU,aAAb,4CAGJ,qBAAKA,UAAU,OAAf,SACI,wBACIC,QAAS,kBAAMsF,GAAoBD,IACnC/G,KAAK,SACLyB,UAAU,gBAHd,8CASHsF,GACG,eAAC,WAAD,WACK,IACD,sBAAKtF,UAAU,0BAAf,UACI,mBAAGA,UAAU,2BACb,uBACIzB,KAAK,OACLoD,YAAY,gBACZtB,KAAK,YACLmB,MAAO6D,EACPhE,SAAU,SAACC,GAAD,OAAOD,EAASC,SAGlC,sBAAKtB,UAAU,0BAAf,UACI,mBAAGA,UAAU,0BACb,uBACIzB,KAAK,OACLoD,YAAY,eACZtB,KAAK,WACLmB,MAAO0D,EACP7D,SAAU,SAACC,GAAD,OAAOD,EAASC,SAGlC,sBAAKtB,UAAU,0BAAf,UACI,mBAAGA,UAAU,0BACb,uBACIzB,KAAK,OACLoD,YAAY,eACZtB,KAAK,WACLmB,MAAO2D,EACP9D,SAAU,SAACC,GAAD,OAAOD,EAASC,SAGlC,sBAAKtB,UAAU,0BAAf,UACI,mBAAGA,UAAU,yBAA0B,IACvC,uBACIzB,KAAK,OACLoD,YAAY,cACZtB,KAAK,UACLmB,MAAO4D,EACP/D,SAAU,SAACC,GAAD,OAAOD,EAASC,YAM1C,uBACI/C,KAAK,SACLyB,UAAU,yBACV2B,YAAY,WAEhB,cAAC,IAAD,CAAM3B,UAAU,qBAAqBD,GAAG,aAAxC,+BC7LVyF,GAAe,CACjBhC,QAAS,GACTqB,SAAU,GACVhC,OAAQ,GACRiC,OAAQ,GACRC,eAAgB,GAChBC,IAAK,GACLE,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,UAAW,IA6NA7F,gBAJS,SAACC,GAAD,MAAY,CAChC4E,QAAS5E,EAAM4E,WAGqB,CAAEtB,iBAAeJ,sBAA1CnD,CACXmF,aA3NgB,SAAC,GAKd,IAAD,IAJFN,QAAWA,EAIT,EAJSA,QAASxE,EAIlB,EAJkBA,QACpBkD,EAGE,EAHFA,cACAJ,EAEE,EAFFA,kBACAK,EACE,EADFA,QAEA,EAAgC/B,mBAASuE,IAAzC,mBAAOrE,EAAP,KAAiBC,EAAjB,KAEA,EAAkDH,oBAAS,GAA3D,mBAAOqE,EAAP,KAA4BC,EAA5B,KAEAb,qBAAU,WAGN,GAFKL,GAAS1B,KAET9C,GAAWwE,EAAS,CACrB,IAAMoB,EAAW,eAAQD,IACzB,IAAK,IAAME,KAAOrB,EACVqB,KAAOD,IAAaA,EAAYC,GAAOrB,EAAQqB,IAEvD,IAAK,IAAMA,KAAOrB,EAAQsB,OAClBD,KAAOD,IAAaA,EAAYC,GAAOrB,EAAQsB,OAAOD,IAG1DE,MAAMC,QAAQJ,EAAYX,UAC1BW,EAAYX,OAASW,EAAYX,OAAOgB,KAAK,OAEjD1E,EAAYqE,MAEjB,CAAC5F,EAAS8C,EAAmB0B,IAEhC,IACIb,EAUArC,EAVAqC,QACAqB,EASA1D,EATA0D,SACAhC,EAQA1B,EARA0B,OACAiC,EAOA3D,EAPA2D,OACAC,EAMA5D,EANA4D,eACAC,EAKA7D,EALA6D,IACAE,EAIA/D,EAJA+D,SACAC,EAGAhE,EAHAgE,SACAC,EAEAjE,EAFAiE,QACAC,EACAlE,EADAkE,UAGEhE,EAAW,SAACC,GAAD,OACbF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAOzD,OACI,eAAC,WAAD,WACI,oBAAIxB,UAAU,qBAAd,SACI,yDAEJ,oBAAGA,UAAU,OAAb,UACI,mBAAGA,UAAU,gBADjB,6BAGA,mBAAGA,UAAU,aAAb,iCACA,uBAAMA,UAAU,OAAOyB,SAAU,SAACH,GAAD,OAdxB,SAACA,GACdA,EAAEI,iBACFqB,EAAc5B,EAAU6B,GAAS,GAYWvB,CAASH,IAAjD,UACI,sBAAKtB,UAAU,aAAf,UACI,yBACIK,KAAK,SACLmB,MAAOqB,EACPxB,SAAU,SAACC,GAAD,OAAOD,EAASC,IAH9B,UAKI,wBAAQE,MAAM,IAAd,uDAGA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,0BAEJ,mBAAGxB,UAAU,aAAb,qDAIJ,qBAAKA,UAAU,aAAf,SACI,uBACIzB,KAAK,OACLoD,YAAY,mBACZtB,KAAK,UACLmB,MAAOgC,EACPnC,SAAU,SAACC,GAAD,OAAOD,EAASC,QAIlC,sBAAKtB,UAAU,aAAf,UACI,uBACIzB,KAAK,OACLoD,YAAY,WACZtB,KAAK,WACLhC,GAAG,GACHmD,MAAOqD,EACPxD,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE9B,mBAAGtB,UAAU,aAAb,yDAKJ,sBAAKA,UAAU,aAAf,UACI,uBACIzB,KAAK,OACLoD,YAAY,WACZtB,KAAK,SACLmB,MAAOsD,EACPzD,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE9B,mBAAGtB,UAAU,aAAb,2EAKJ,sBAAKA,UAAU,aAAf,UACI,uBACIzB,KAAK,OACLoD,YAAY,kBACZtB,KAAK,iBACLmB,MAAOuD,EACP1D,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE9B,mBAAGtB,UAAU,aAAb,qEAKJ,sBAAKA,UAAU,aAAf,UACI,0BACIzB,KAAK,OACLoD,YAAY,qBACZtB,KAAK,MACLmB,MAAOwD,EACP3D,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE9B,mBAAGtB,UAAU,aAAb,4CAGJ,qBAAKA,UAAU,OAAf,SACI,wBACIC,QAAS,kBAAMsF,GAAoBD,IACnC/G,KAAK,SACLyB,UAAU,gBAHd,8CASHsF,GACG,eAAC,WAAD,WACK,IACD,sBAAKtF,UAAU,0BAAf,UACI,mBAAGA,UAAU,2BACb,uBACIzB,KAAK,OACLoD,YAAY,gBACZtB,KAAK,YACLmB,MAAO6D,EACPhE,SAAU,SAACC,GAAD,OAAOD,EAASC,SAGlC,sBAAKtB,UAAU,0BAAf,UACI,mBAAGA,UAAU,0BACb,uBACIzB,KAAK,OACLoD,YAAY,eACZtB,KAAK,WACLmB,MAAO0D,EACP7D,SAAU,SAACC,GAAD,OAAOD,EAASC,SAGlC,sBAAKtB,UAAU,0BAAf,UACI,mBAAGA,UAAU,0BACb,uBACIzB,KAAK,OACLoD,YAAY,eACZtB,KAAK,WACLmB,MAAO2D,EACP9D,SAAU,SAACC,GAAD,OAAOD,EAASC,SAGlC,sBAAKtB,UAAU,0BAAf,UACI,mBAAGA,UAAU,yBAA0B,IACvC,uBACIzB,KAAK,OACLoD,YAAY,cACZtB,KAAK,UACLmB,MAAO4D,EACP/D,SAAU,SAACC,GAAD,OAAOD,EAASC,YAM1C,uBACI/C,KAAK,SACLyB,UAAU,yBACV2B,YAAY,WAEhB,cAAC,IAAD,CAAM3B,UAAU,qBAAqBD,GAAG,aAAxC,+BCzEDP,eAAQ,KAAM,CAAEuG,cNkBF,SAAC5E,EAAU6B,GAAX,8CAAuB,WAAO5E,GAAP,mBAAAgB,EAAA,sEAEtCoB,EAAS,CACX1B,QAAS,CACL,eAAgB,qBAJoB,SAQ1BF,IAAMoH,IACpB,0BACA7E,EACAX,GAXwC,OAQtClB,EARsC,OAc5ClB,EAAS,CACLG,KAAMnB,EACNoB,QAASc,EAAIC,OAGjBnB,EAASJ,EAAS,mBAAoB,YAEtCgF,EAAQE,KAAK,cArB+B,mDAuBtCrC,EAAS,KAAIC,SAASvB,KAAKsB,SAG7BA,EAAOE,SAAQ,SAACC,GAAD,OAAW5C,EAASJ,EAASgD,EAAM/C,IAAK,cAG3DG,EAAS,CACLG,KAAMlB,EACNmB,QAAS,CACLP,IAAK,KAAI6C,SAASvB,KAAKtB,IACvB4E,OAAQ,KAAI/B,SAAS+B,UAjCe,0DAAvB,wDMlBdrD,CAAiCmF,aA5I1B,SAAC,GAAgC,IAA9BoB,EAA6B,EAA7BA,cAAe/C,EAAc,EAAdA,QACpC,EAAgC/B,mBAAS,CACrCuC,QAAS,GACTC,MAAO,GACPoB,SAAU,GACVoB,KAAM,GACNlG,GAAI,GACJmG,SAAS,EACTC,YAAa,KAPjB,mBAAOhF,EAAP,KAAiBC,EAAjB,KAUA,EAAyCH,oBAAS,GAAlD,mBAAOmF,EAAP,KAAuBC,EAAvB,KAEQ7C,EACJrC,EADIqC,QAASC,EACbtC,EADasC,MAAOoB,EACpB1D,EADoB0D,SAAUlB,EAC9BxC,EAD8BwC,KAAM5D,EACpCoB,EADoCpB,GAAImG,EACxC/E,EADwC+E,QAASC,EACjDhF,EADiDgF,YAG/C9E,EAAW,SAACC,GAAD,OACbF,EAAY,2BACLD,GADI,kBAENG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAGlC,OACI,eAAC,WAAD,WACI,oBAAI8E,MAAM,qBAAV,SACI,uDAEJ,oBAAGA,MAAM,OAAT,UACI,mBAAGA,MAAM,mBAAT,eADJ,wCAIA,mBAAGA,MAAM,aAAT,iCACA,uBACIA,MAAM,OACN7E,SAAU,SAACH,GACPA,EAAEI,iBACFqE,EAAc5E,EAAU6B,IAJhC,UAOI,qBAAKsD,MAAM,aAAX,SACI,uBACI/H,KAAK,OACLoD,YAAY,cACZtB,KAAK,QACLmB,MAAOiC,EACPpC,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BQ,UAAQ,MAGhB,qBAAKwE,MAAM,aAAX,SACI,uBACI/H,KAAK,OACLoD,YAAY,YACZtB,KAAK,UACLmB,MAAOgC,EACPnC,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BQ,UAAQ,MAIhB,sBAAKwE,MAAM,aAAX,UACI,uBACI/H,KAAK,OACLoD,YAAY,WACZtB,KAAK,WACLmB,MAAOqD,EACPxD,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE9B,mBAAGgF,MAAM,aAAT,yDAKJ,sBAAKA,MAAM,aAAX,UACI,oBAAIA,MAAM,aAAV,wBACA,uBACI/H,KAAK,OACL8B,KAAK,OACLmB,MAAOmC,EACPtC,SAAU,SAACC,GAAD,OAAOD,EAASC,SAIlC,sBAAKgF,MAAM,aAAX,UACI,oBAAIA,MAAM,aAAV,sBAEA,uBACI/H,KAAK,OACL8B,KAAK,KACLmB,MAAOzB,EACPsB,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BiF,SAAUH,EAAiB,WAAa,KAG5C,oBAAGE,MAAM,aAAT,UACI,uBACI/H,KAAK,WACL8B,KAAK,UACLmG,QAASN,EACT1E,MAAO0E,EACP7E,SAAU,SAACC,GACPF,EAAY,2BACLD,GADI,IAEP+E,SAAUA,KAEdG,GAAgBD,MAErB,IAbP,8BAkBJ,qBAAKE,MAAM,aAAX,SACI,0BACIjG,KAAK,cACLoG,KAAK,KACLC,KAAK,IACL/E,YAAY,kBACZH,MAAO2E,EACP9E,SAAU,SAACC,GAAD,OAAOD,EAASC,QAIlC,uBACI/C,KAAK,SACL+H,MAAM,yBACN3E,YAAY,WAEhB,mBAAG2E,MAAM,qBAAqBpG,KAAK,iBAAnC,+BCODV,eAAQ,KAAM,CAAEmH,aP+DH,SAACxF,EAAU6B,GAAX,8CAAuB,WAAO5E,GAAP,mBAAAgB,EAAA,sEAErCoB,EAAS,CACX1B,QAAS,CACL,eAAgB,qBAJmB,SAQzBF,IAAMoH,IAAI,yBAA0B7E,EAAUX,GARrB,OAQrClB,EARqC,OAU3ClB,EAAS,CACLG,KAAMnB,EACNoB,QAASc,EAAIC,OAGjBnB,EAASJ,EAAS,kBAAmB,YAErCgF,EAAQE,KAAK,cAjB8B,mDAmBrCrC,EAAS,KAAIC,SAASvB,KAAKsB,SAG7BA,EAAOE,SAAQ,SAACC,GAAD,OAAW5C,EAASJ,EAASgD,EAAM/C,IAAK,cAG3DG,EAAS,CACLG,KAAMlB,EACNmB,QAAS,CACLP,IAAK,KAAI6C,SAASvB,KAAKtB,IACvB4E,OAAQ,KAAI/B,SAAS+B,UA7Bc,0DAAvB,wDO/DbrD,CAAgCmF,aAvI1B,SAAC,GAA+B,IAA7BgC,EAA4B,EAA5BA,aAAc3D,EAAc,EAAdA,QAClC,EAAgC/B,mBAAS,CACrCgD,OAAQ,GACRC,OAAQ,GACRC,aAAc,GACd8B,KAAM,GACNlG,GAAI,GACJmG,SAAS,EACT9B,IAAK,KAPT,mBAAOjD,EAAP,KAAiBC,EAAjB,KAUA,EAAyCH,oBAAS,GAAlD,mBAAOmF,EAAP,KAAuBC,EAAvB,KAEQpC,EAAyD9C,EAAzD8C,OAAQC,EAAiD/C,EAAjD+C,OAAQC,EAAyChD,EAAzCgD,aAAcR,EAA2BxC,EAA3BwC,KAAM5D,EAAqBoB,EAArBpB,GAAImG,EAAiB/E,EAAjB+E,QAAS9B,EAAQjD,EAARiD,IAEnD/C,EAAW,SAACC,GAAD,OACbF,EAAY,2BACLD,GADI,kBAENG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAGlC,OACI,eAAC,WAAD,WACI,oBAAI8E,MAAM,qBAAV,SACI,mDAEJ,oBAAGA,MAAM,OAAT,UACI,mBAAGA,MAAM,mBAAT,eADJ,sCAIA,mBAAGA,MAAM,aAAT,iCACA,uBACIA,MAAM,OACN7E,SAAU,SAACH,GACPA,EAAEI,iBACFiF,EAAaxF,EAAU6B,IAJ/B,UAOI,qBAAKsD,MAAM,aAAX,SACI,uBACI/H,KAAK,OACLoD,YAAY,WACZtB,KAAK,SACLmB,MAAOyC,EACP5C,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BQ,UAAQ,MAGhB,qBAAKwE,MAAM,aAAX,SACI,uBACI/H,KAAK,OACLoD,YAAY,WACZtB,KAAK,SACLmB,MAAO0C,EACP7C,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BQ,UAAQ,MAIhB,qBAAKwE,MAAM,aAAX,SACI,uBACI/H,KAAK,OACLoD,YAAY,iBACZtB,KAAK,eACLmB,MAAO2C,EACP9C,SAAU,SAACC,GAAD,OAAOD,EAASC,QAIlC,sBAAKgF,MAAM,aAAX,UACI,oBAAIA,MAAM,aAAV,wBACA,uBACI/H,KAAK,QACL8B,KAAK,OACLmB,MAAOmC,EACPtC,SAAU,SAACC,GAAD,OAAOD,EAASC,SAIlC,sBAAKgF,MAAM,aAAX,UACI,oBAAIA,MAAM,aAAV,iCAEA,uBACI/H,KAAK,QACL8B,KAAK,KACLmB,MAAOzB,EACPsB,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BiF,SAAUH,EAAiB,WAAa,KAG5C,oBAAGE,MAAM,aAAT,UACI,uBACI/H,KAAK,WACL8B,KAAK,UACLmG,QAASN,EACT1E,MAAO0E,EACP7E,SAAU,SAACC,GACPF,EAAY,2BACLD,GADI,IAEP+E,SAAUA,KAEdG,GAAgBD,MAErB,IAbP,sCAkBJ,qBAAKE,MAAM,aAAX,SACI,uBACI/H,KAAK,OACLoD,YAAY,MACZtB,KAAK,MACLmB,MAAO4C,EACP/C,SAAU,SAACC,GAAD,OAAOD,EAASC,QAIlC,uBACI/C,KAAK,SACL+H,MAAM,yBACN3E,YAAY,WAEhB,mBAAG2E,MAAM,qBAAqBpG,KAAK,iBAAnC,+BCrFD0G,GAxCK,SAAC,GAQd,IAAD,IAPFvC,QAOE,IANEI,KAAQb,EAMV,EANUA,IAAKvD,EAMf,EANeA,KAAMwG,EAMrB,EANqBA,OACnBhE,EAKF,EALEA,OACAW,EAIF,EAJEA,QACAqB,EAGF,EAHEA,SACAC,EAEF,EAFEA,OAGJ,OACI,sBAAK9E,UAAU,mBAAf,UACI,qBAAKmC,IAAK0E,EAAQpE,IAAI,GAAGzC,UAAU,cACnC,gCACI,6BAAKK,IACL,8BACKwC,EADL,IACcW,GAAW,wCAAWA,QAEpC,mBAAGxD,UAAU,eAAb,SACK6E,GAAY,+BAAOA,MAExB,eAAC,IAAD,CAAM9E,GAAE,mBAAc6D,GAAO5D,UAAU,kBAAvC,UACK,IADL,QAES,qCAAQK,EAAR,SAFT,iBAKJ,6BACKyE,EAAOgC,MAAM,EAAG,GAAG7E,KAAI,SAAC8E,EAAOC,GAAR,OACpB,qBAAgBhH,UAAU,uBAA1B,UACI,mBAAGA,UAAU,iBADjB,IACsC+G,IAD7BC,YCoBdxH,gBAJS,SAACC,GAAD,MAAY,CAChC4E,QAAS5E,EAAM4E,WAGqB,CAAEvB,gBAA3BtD,EA3CE,SAAC,GAAqD,IAAnDsD,EAAkD,EAAlDA,YAAkD,IAArCuB,QAAW4C,EAA0B,EAA1BA,SAAUpH,EAAgB,EAAhBA,QAKlD,OAJA6E,qBAAU,WACN5B,MACD,CAACA,IAGA,cAAC,WAAD,UACKjD,EACG,cAAC,EAAD,IAEA,eAAC,WAAD,WACI,oBAAIG,UAAU,qBAAd,wBACA,oBAAGA,UAAU,OAAb,UACI,mBAAGA,UAAU,4BAAb,eADJ,+CAIA,qBAAKA,UAAU,WAAf,SACKiH,EAASC,OAAS,EACfD,EAAShF,KAAI,SAACoC,GAAD,OACT,cAAC,GAAD,CAEIA,QAASA,GADJA,EAAQT,QAKrB,iEC8BbuD,GA5DI,SAAC,GASb,IAAD,IARF9C,QACIxB,EAOF,EAPEA,OACAW,EAMF,EANEA,QACAqB,EAKF,EALEA,SACAD,EAIF,EAJEA,QACAe,EAGF,EAHEA,OAGF,IAFElB,KAAQpE,EAEV,EAFUA,KAAMwG,EAEhB,EAFgBA,OAGlB,OACI,sBAAK7G,UAAU,6BAAf,UACI,qBAAKA,UAAU,iBAAiBmC,IAAK0E,EAAQpE,IAAI,KACjD,oBAAIzC,UAAU,QAAd,SAAuBK,IACvB,oBAAGL,UAAU,OAAb,UACK6C,EADL,IACcW,GAAW,wCAAWA,QAEpC,4BAAIqB,GAAY,+BAAOA,MACvB,sBAAK7E,UAAU,aAAf,UACK4E,GACG,mBAAG1E,KAAM0E,EAASrD,OAAO,SAAS6F,IAAI,sBAAtC,SACI,mBAAGpH,UAAU,yBAGpB2F,GAAUA,EAAON,WACd,mBACInF,KAAMyF,EAAON,UACb9D,OAAO,SACP6F,IAAI,sBAHR,SAKI,mBAAGpH,UAAU,6BAGpB2F,GAAUA,EAAOR,UACd,mBACIjF,KAAMyF,EAAOR,SACb5D,OAAO,SACP6F,IAAI,sBAHR,SAKI,mBAAGpH,UAAU,4BAGpB2F,GAAUA,EAAOP,SACd,mBACIlF,KAAMyF,EAAOP,QACb7D,OAAO,SACP6F,IAAI,sBAHR,SAKI,mBAAGpH,UAAU,kCCZtBqH,GApCM,SAAC,GAMf,IAAD,IALFhD,QACIW,EAIF,EAJEA,IACAF,EAGF,EAHEA,OACQzE,EAEV,EAFEoE,KAAQpE,KAGZ,OACI,sBAAKL,UAAU,6BAAf,UACKgF,GACG,eAAC,WAAD,WACI,qBAAIhF,UAAU,eAAd,UACKK,EAAKiH,OAAOC,MAAM,KAAK,GAD5B,YAGA,4BAAIvC,IACJ,qBAAKhF,UAAU,YAIvB,oBAAIA,UAAU,eAAd,uBACA,qBAAKA,UAAU,SAAf,SACK8E,EAAO7C,KAAI,SAAC8E,EAAOC,GAAR,OACR,sBAAiBhH,UAAU,MAA3B,UACI,mBAAGA,UAAU,iBACZ+G,IAFKC,YCKfQ,GA1BW,SAAC,GAEpB,IAAD,IADFnE,WAAcG,EACZ,EADYA,QAASC,EACrB,EADqBA,MAA0B1D,GAC/C,EAD4B8E,SAC5B,EADsCqB,QACtC,EAD+CnG,IAAI4D,EACnD,EADmDA,KAAMwC,EACzD,EADyDA,YAE3D,OACI,gCACI,oBAAInG,UAAU,kBAAd,SAAiCwD,IACjC,8BACI,cAAC,KAAD,CAAQE,OAAO,UAAf,SAA0BC,IAD9B,KAC+C,IACzC5D,EAAc,cAAC,KAAD,CAAQ2D,OAAO,UAAf,SAA0B3D,IAAnC,UAEX,qBAAIC,UAAU,0CAAd,sBACc,OACR,IACLyD,EACD,qBAAIzD,UAAU,0CAAd,yBACiB,OACX,IACLmG,MCKEsB,GAtBU,SAAC,GAEnB,IAAD,IADF3D,UAAaG,EACX,EADWA,OAAQC,EACnB,EADmBA,OAAQC,EAC3B,EAD2BA,aAAuBpE,GAClD,EADyCmG,QACzC,EADkDnG,IAAI4D,EACtD,EADsDA,KAAMS,EAC5D,EAD4DA,IAE9D,OACI,gCACI,oBAAIpE,UAAU,kBAAd,SAAiCiE,IACjC,8BACI,cAAC,KAAD,CAAQP,OAAO,UAAf,SAA0BC,IAD9B,KAC+C,IACzC5D,EAAc,cAAC,KAAD,CAAQ2D,OAAO,UAAf,SAA0B3D,IAAnC,UAEX,oBAAIC,UAAU,4BAAd,sBANJ,IAM6DkE,EACzD,oBAAIlE,UAAU,4BAAd,8BAAgE,IAC/DmE,EACD,oBAAInE,UAAU,4BAAd,mBATJ,IAS0DoE,MC0CnD5E,gBAHS,SAACC,GAAD,MAAY,CAChCiI,MAAOjI,EAAM4E,QAAQqD,SAEe,CAAEC,edsCZ,SAACC,GAAD,8CAAc,WAAOxJ,GAAP,eAAAgB,EAAA,+EAElBR,IAAMS,IAAN,8BAAiCuI,IAFf,OAE9BtI,EAF8B,OAIpClB,EAAS,CACLG,KAAMpB,EACNqB,QAASc,EAAIC,OANmB,gDASpCnB,EAAS,CACLG,KAAMlB,EACNmB,QAAS,CACLP,IAAK,KAAI6C,SAAS8B,WAClBC,OAAQ,KAAI/B,SAAS+B,UAbO,yDAAd,wDctCfrD,EArDO,SAAC,GAAyC,IAAvCoI,EAAsC,EAAtCA,SAAUD,EAA4B,EAA5BA,eAAgBD,EAAY,EAAZA,MAI/C,OAHAhD,qBAAU,WACNiD,EAAeC,KAChB,CAACD,EAAgBC,IAEhB,sBAAK5H,UAAU,iBAAf,UACI,oBAAIA,UAAU,oBAAd,0BACW,OAAV0H,EACG,cAAC,EAAD,IAEAA,EAAMzF,KAAI,SAAC4F,GAAD,OACN,sBAAmB7H,UAAU,yBAA7B,UACI,gCACI,6BACI,mBACIA,UAAU,sBACVE,KAAM2H,EAAKC,SACXvG,OAAO,SACP6F,IAAI,sBAJR,SAMKS,EAAKxH,SAGd,4BAAIwH,EAAK1B,iBAEb,8BACI,+BACI,qBAAInG,UAAU,sBAAd,oBACY6H,EAAKE,oBAEjB,qBAAI/H,UAAU,sBAAd,uBACe6H,EAAKG,kBACd,IACN,qBAAIhI,UAAU,sBAAd,oBACY6H,EAAKI,sBAvBnBJ,EAAKxJ,aC+EpBmB,gBALS,SAACC,GAAD,MAAY,CAChC4E,QAAS5E,EAAM4E,QACf3E,KAAMD,EAAMC,QAGwB,CAAEwI,efzCZ,SAACC,GAAD,8CAAY,WAAO/J,GAAP,eAAAgB,EAAA,6DACtChB,EAAS,CAAEG,KAAMjB,IADqB,kBAIhBsB,IAAMS,IAAN,4BAA+B8I,IAJf,OAI5B7I,EAJ4B,OAMlClB,EAAS,CACLG,KAAMtB,EACNuB,QAASc,EAAIC,OARiB,gDAWlCnB,EAAS,CACLG,KAAMlB,EACNmB,QAAS,CACLP,IAAK,KAAI6C,SAAS8B,WAClBC,OAAQ,KAAI/B,SAAS+B,UAfK,yDAAZ,wDeyCfrD,EAnFC,SAAC,GAKV,IAJH0I,EAIE,EAJFA,eAIE,IAHF7D,QAAWA,EAGT,EAHSA,QAASxE,EAGlB,EAHkBA,QACpBH,EAEE,EAFFA,KACA0I,EACE,EADFA,MAKA,OAHA1D,qBAAU,WACNwD,EAAeE,EAAMC,OAAOhK,MAC7B,CAAC6J,EAAgBE,EAAMC,OAAOhK,KAE7B,cAAC,WAAD,UACiB,OAAZgG,GAAoBxE,EACjB,cAAC,EAAD,IAEA,eAAC,WAAD,WACI,cAAC,IAAD,CAAME,GAAG,YAAYC,UAAU,gBAA/B,+BAGCN,EAAKE,kBACe,IAAjBF,EAAKG,SACLH,EAAK+E,KAAKb,MAAQS,EAAQI,KAAKb,KAC3B,eAAC,IAAD,CAAM7D,GAAG,gBAAgBC,UAAU,gBAAnC,UACK,IADL,qBAKR,sBAAKA,UAAU,oBAAf,UACI,cAAC,GAAD,CAAYqE,QAASA,IACrB,cAAC,GAAD,CAAcA,QAASA,IAEvB,sBAAKrE,UAAU,2BAAf,UACI,oBAAIA,UAAU,eAAd,uBACCqE,EAAQP,UAAUoD,OAAS,EACxB,cAAC,WAAD,UACK7C,EAAQP,UAAU7B,KAAI,SAAC6B,GAAD,OACnB,cAAC,GAAD,CAEIA,UAAWA,GADNA,EAAUF,UAM3B,4DAIR,sBAAK5D,UAAU,2BAAf,UACI,oBAAIA,UAAU,eAAd,wBACCqE,EAAQhB,WAAW6D,OAAS,EACzB,cAAC,WAAD,UACK7C,EAAQhB,WAAWpB,KAAI,SAACoB,GAAD,OACpB,cAAC,GAAD,CAEIA,WAAYA,GADPA,EAAWO,UAM5B,6DAIPS,EAAQU,gBACL,cAAC,GAAD,CAAe6C,SAAUvD,EAAQU,4BCxB9CvF,gBAJS,SAACC,GAAD,MAAY,CAChC4E,QAAS5E,EAAM4E,WAGqB,CAAEvB,gBAA3BtD,EA5CI,SAAC,GAAqD,IAAnDsD,EAAkD,EAAlDA,YAAkD,IAArCuB,QAAW4C,EAA0B,EAA1BA,SAAUpH,EAAgB,EAAhBA,QAKpD,OAJA6E,qBAAU,WACN5B,MACD,CAACA,IAGA,cAAC,WAAD,UACKjD,EACG,cAAC,EAAD,IAEA,eAAC,WAAD,WACI,oBAAIG,UAAU,qBAAd,0BACA,oBAAGA,UAAU,OAAb,UACI,mBAAGA,UAAU,0BAAb,eADJ,mDAIA,qBAAKA,UAAU,WAAf,SACKiH,EAAShF,KAAI,SAACoC,GAAD,MACY,YAAtBA,EAAQI,KAAKpE,MACS,cAAtBgE,EAAQI,KAAKpE,KACT,cAAC,GAAD,CAEIgE,QAASA,GADJA,EAAQT,KAIjB,gDC1B1B0E,GAAW,SAAC,GAOX,IANHC,EAME,EANFA,QACAC,EAKE,EALFA,WACAC,EAIE,EAJFA,WACA/I,EAGE,EAHFA,KAGE,IAFFkB,KAAQgD,EAEN,EAFMA,IAAK8E,EAEX,EAFWA,KAAMrI,EAEjB,EAFiBA,KAAMwG,EAEvB,EAFuBA,OAAQpC,EAE/B,EAF+BA,KAAMkE,EAErC,EAFqCA,MAAOC,EAE5C,EAF4CA,SAAUC,EAEtD,EAFsDA,KACxDC,EACE,EADFA,YAEA,OACI,sBAAK9I,UAAU,yBAAf,UACI,8BACI,eAAC,IAAD,CAAMD,GAAE,mBAAc0E,GAAtB,UACI,qBAAKzE,UAAU,iBAAiBmC,IAAK0E,EAAQpE,IAAI,KACjD,oBAAIzC,UAAU,YAAd,SAA2BK,SAInC,gCACI,mBAAGL,UAAU,YAAb,SAA0B0I,IAC1B,oBAAG1I,UAAU,YAAb,uBACc,cAAC,KAAD,CAAQ0D,OAAO,aAAf,SAA6BmF,OAG1CC,GACG,eAAC,WAAD,WACI,yBAAQ7I,QAAS,kBAAMsI,EAAQ3E,IAAM5D,UAAU,MAA/C,UACI,mBAAGA,UAAU,qBAAwB,IACrC,+BACK2I,EAAMzB,OAAS,GACZ,+BAAOyB,EAAMzB,cAIzB,yBAAQjH,QAAS,kBAAMuI,EAAW5E,IAAM5D,UAAU,MAAlD,UACI,mBAAGA,UAAU,uBAA0B,OAE3C,eAAC,IAAD,CAAMD,GAAE,iBAAY6D,GAAO5D,UAAU,kBAArC,uBAEK4I,EAAS1B,OAAS,GACf,sBAAMlH,UAAU,gBAAhB,SACK4I,EAAS1B,aAIpBxH,EAAKG,SAAW4E,IAAS/E,EAAK+E,KAAKb,KACjC,yBACI3D,QAAS,SAACqB,GAAD,OAAOmH,EAAW7E,IAC3BrF,KAAK,SACLyB,UAAU,iBAHd,oBAKW,mBAAGA,UAAU,8BAUpDsI,GAASS,aAAe,CACpBD,aAAa,GAWjB,IAIetJ,gBAJS,SAACC,GAAD,MAAY,CAChCC,KAAMD,EAAMC,QAGwB,CAAE6I,QChDnB,SAAClK,GAAD,8CAAQ,WAAOD,GAAP,eAAAgB,EAAA,+EAELR,IAAMoH,IAAN,yBAA4B3H,IAFvB,OAEjBiB,EAFiB,OAIvBlB,EAAS,CACLG,KAAMR,EACNS,QAAS,CAAEH,KAAIsK,MAAOrJ,EAAIC,QANP,gDASvBnB,EAAS,CACLG,KAAMb,EACNc,QAAS,CACLP,IAAK,KAAI6C,SAAS8B,WAClBC,OAAQ,KAAI/B,SAAS+B,UAbN,yDAAR,uDDgD4B2F,WC5BzB,SAACnK,GAAD,8CAAQ,WAAOD,GAAP,eAAAgB,EAAA,+EAERR,IAAMoH,IAAN,2BAA8B3H,IAFtB,OAEpBiB,EAFoB,OAI1BlB,EAAS,CACLG,KAAMR,EACNS,QAAS,CAAEH,KAAIsK,MAAOrJ,EAAIC,QANJ,gDAS1BnB,EAAS,CACLG,KAAMb,EACNc,QAAS,CACLP,IAAK,KAAI6C,SAAS8B,WAClBC,OAAQ,KAAI/B,SAAS+B,UAbH,yDAAR,uDD4BqC4F,WCRrC,SAACpK,GAAD,8CAAQ,WAAOD,GAAP,SAAAgB,EAAA,+EAEpBR,IAAMwE,OAAN,oBAA0B/E,IAFN,OAI1BD,EAAS,CACLG,KAAMZ,EACNa,QAASH,IAGbD,EAASJ,EAAS,eAAgB,YATR,gDAW1BI,EAAS,CACLG,KAAMb,EACNc,QAAS,CACLP,IAAK,KAAI6C,SAAS8B,WAClBC,OAAQ,KAAI/B,SAAS+B,UAfH,yDAAR,wDDQXrD,CACX8I,IExCW9I,eAAQ,KAAM,CAAEwJ,QDqDR,SAAC7H,GAAD,8CAAc,WAAO/C,GAAP,iBAAAgB,EAAA,6DAC3BoB,EAAS,CACX1B,QAAS,CACL,eAAgB,qBAHS,kBAOXF,IAAMgC,KAAK,YAAaO,EAAUX,GAPvB,OAOvBlB,EAPuB,OAS7BlB,EAAS,CACLG,KAAMX,EACNY,QAASc,EAAIC,OAGjBnB,EAASJ,EAAS,eAAgB,YAdL,gDAgB7BI,EAAS,CACLG,KAAMb,EACNc,QAAS,CACLP,IAAK,KAAI6C,SAAS8B,WAClBC,OAAQ,KAAI/B,SAAS+B,UApBA,yDAAd,wDCrDRrD,EAvCE,SAAC,GAAiB,IAAfwJ,EAAc,EAAdA,QAChB,EAAwB/H,mBAAS,IAAjC,mBAAOyH,EAAP,KAAaO,EAAb,KAEA,OACI,sBAAKjJ,UAAU,YAAf,UACI,qBAAKA,UAAU,8BAAf,SACI,kDAEJ,uBACIA,UAAU,YACVyB,SAAU,SAACH,GACPA,EAAEI,iBACFsH,EAAQ,CAAEN,SACVO,EAAQ,KALhB,UAQI,0BACI5I,KAAK,OACLoG,KAAK,KACLC,KAAK,IACL/E,YAAY,gCACZH,MAAOkH,EACPrH,SAAU,SAACC,GAAD,OAAO2H,EAAQ3H,EAAEC,OAAOC,QAClCM,UAAQ,IAEZ,uBACIvD,KAAK,SACLiD,MAAM,SACNxB,UAAU,+BCOfR,gBAJS,SAACC,GAAD,MAAY,CAChCmB,KAAMnB,EAAMmB,QAGwB,CAAEsI,SFzBlB,yDAAM,WAAO9K,GAAP,eAAAgB,EAAA,+EAEJR,IAAMS,IAAI,aAFN,OAEhBC,EAFgB,OAItBlB,EAAS,CACLG,KAAMf,EACNgB,QAASc,EAAIC,OANK,gDAStBnB,EAAS,CACLG,KAAMb,EACNc,QAAS,CACLP,IAAK,KAAI6C,SAAS8B,WAClBC,OAAQ,KAAI/B,SAAS+B,UAbP,yDAAN,wDEyBTrD,EAhCD,SAAC,GAA4C,IAA1C0J,EAAyC,EAAzCA,SAAyC,IAA/BtI,KAAQuI,EAAuB,EAAvBA,MAAOtJ,EAAgB,EAAhBA,QAKtC,OAJA6E,qBAAU,WACNwE,MACD,CAACA,IAEGrJ,EACH,cAAC,EAAD,IAEA,eAAC,WAAD,WACI,oBAAIG,UAAU,qBAAd,oBACA,oBAAGA,UAAU,OAAb,UACI,mBAAGA,UAAU,gBADjB,gCAGA,cAAC,GAAD,IACA,qBAAKA,UAAU,QAAf,SACKmJ,EAAMlH,KAAI,SAACrB,GAAD,OACP,cAAC,GAAD,CAAyBA,KAAMA,GAAhBA,EAAKgD,gBCoBzBpE,eAAQ,KAAM,CAAE4J,WHoGL,SAACC,EAAQlI,GAAT,8CAAsB,WAAO/C,GAAP,iBAAAgB,EAAA,6DACtCoB,EAAS,CACX1B,QAAS,CACL,eAAgB,qBAHoB,kBAOtBF,IAAMgC,KAAN,4BACOyI,GACrBlI,EACAX,GAVoC,OAOlClB,EAPkC,OAaxClB,EAAS,CACLG,KAAMV,EACNW,QAASc,EAAIC,OAGjBnB,EAASJ,EAAS,gBAAiB,YAlBK,gDAoBxCI,EAAS,CACLG,KAAMb,EACNc,QAAS,CACLP,IAAK,KAAI6C,SAAS8B,WAClBC,OAAQ,KAAI/B,SAAS+B,UAxBW,yDAAtB,wDGpGXrD,EAvCK,SAAC,GAA4B,IAA1B6J,EAAyB,EAAzBA,OAAQD,EAAiB,EAAjBA,WAC3B,EAAwBnI,mBAAS,IAAjC,mBAAOyH,EAAP,KAAaO,EAAb,KAEA,OACI,sBAAKjJ,UAAU,YAAf,UACI,qBAAKA,UAAU,8BAAf,SACI,oDAEJ,uBACIA,UAAU,YACVyB,SAAU,SAACH,GACPA,EAAEI,iBACF0H,EAAWC,EAAQ,CAAEX,SACrBO,EAAQ,KALhB,UAQI,0BACI5I,KAAK,OACLoG,KAAK,KACLC,KAAK,IACL/E,YAAY,gCACZH,MAAOkH,EACPrH,SAAU,SAACC,GAAD,OAAO2H,EAAQ3H,EAAEC,OAAOC,QAClCM,UAAQ,IAEZ,uBACIvD,KAAK,SACLiD,MAAM,SACNxB,UAAU,+BCoBfR,gBAJS,SAACC,GAAD,MAAY,CAChCC,KAAMD,EAAMC,QAGwB,CAAE4J,cJ0Hb,SAACD,EAAQE,GAAT,8CAAuB,WAAOnL,GAAP,SAAAgB,EAAA,+EAEtCR,IAAMwE,OAAN,4BAAkCiG,EAAlC,YAA4CE,IAFN,OAI5CnL,EAAS,CACLG,KAAMT,EACNU,QAAS+K,IAGbnL,EAASJ,EAAS,kBAAmB,YATO,gDAW5CI,EAAS,CACLG,KAAMb,EACNc,QAAS,CACLP,IAAK,KAAI6C,SAAS8B,WAClBC,OAAQ,KAAI/B,SAAS+B,UAfe,yDAAvB,wDI1HdrD,EA9CK,SAAC,GAKd,IAJH6J,EAIE,EAJFA,OAIE,IAHFG,QAAW5F,EAGT,EAHSA,IAAK8E,EAGd,EAHcA,KAAMrI,EAGpB,EAHoBA,KAAMwG,EAG1B,EAH0BA,OAAQpC,EAGlC,EAHkCA,KAAMoE,EAGxC,EAHwCA,KAC1CnJ,EAEE,EAFFA,KACA4J,EACE,EADFA,cAEA,OACI,sBAAKhD,MAAM,qBAAX,UACI,8BACI,eAAC,IAAD,CAAMvG,GAAE,mBAAc0E,GAAtB,UACI,qBAAK6B,MAAM,iBAAiBnE,IAAK0E,EAAQpE,IAAI,KAC7C,6BAAKpC,SAIb,gCACI,mBAAGiG,MAAM,YAAT,SAAsBoC,IAEtB,oBAAG1I,UAAU,YAAb,0BACiB,cAAC,KAAD,CAAQ0D,OAAO,aAAf,SAA6BmF,QAE5CnJ,EAAKG,SAAW4E,IAAS/E,EAAK+E,KAAKb,KACjC,yBACI3D,QAAS,SAACqB,GAAD,OAAOgI,EAAcD,EAAQzF,IACtCrF,KAAK,SACLyB,UAAU,iBAHd,UAKI,mBAAGA,UAAU,iBALjB,iCCiBLR,gBAJS,SAACC,GAAD,MAAY,CAChCmB,KAAMnB,EAAMmB,QAGwB,CAAE6I,QL8EnB,SAACpL,GAAD,8CAAQ,WAAOD,GAAP,eAAAgB,EAAA,+EAELR,IAAMS,IAAN,oBAAuBhB,IAFlB,OAEjBiB,EAFiB,OAIvBlB,EAAS,CACLG,KAAMd,EACNe,QAASc,EAAIC,OANM,gDASvBnB,EAAS,CACLG,KAAMb,EACNc,QAAS,CACLP,IAAK,KAAI6C,SAAS8B,WAClBC,OAAQ,KAAI/B,SAAS+B,UAbN,yDAAR,wDK9ERrD,EApCF,SAAC,GAAiD,IAA/CiK,EAA8C,EAA9CA,QAA8C,IAArC7I,KAAQA,EAA6B,EAA7BA,KAAMf,EAAuB,EAAvBA,QAAWuI,EAAY,EAAZA,MAK9C,OAJA1D,qBAAU,WACN+E,EAAQrB,EAAMC,OAAOhK,MACtB,CAACoL,EAASrB,EAAMC,OAAOhK,KAEnBwB,GAAoB,OAATe,EACd,cAAC,EAAD,IAEA,eAAC,WAAD,WACI,cAAC,IAAD,CAAMb,GAAG,SAASC,UAAU,MAA5B,+BAGA,cAAC,GAAD,CAAUY,KAAMA,EAAMkI,aAAa,IACnC,cAAC,GAAD,CAAaO,OAAQzI,EAAKgD,MAC1B,qBAAK5D,UAAU,WAAf,SACKY,EAAKgI,SAAS3G,KAAI,SAACuH,GAAD,OACf,cAAC,GAAD,CAEIA,QAASA,EACTH,OAAQzI,EAAKgD,KAFR4F,EAAQ5F,gB,iCCEtBpE,gBAJS,SAACC,GAAD,MAAY,CAChCC,KAAMD,EAAMC,QAGDF,EAxBM,SAAC,GAAD,IACNkK,EADM,EACjBC,UADiB,IAEjBjK,KAAQE,EAFS,EAETA,gBAAiBC,EAFR,EAEQA,QACtB+J,EAHc,0BAKjB,cAAC,IAAD,2BACQA,GADR,IAEIC,OAAQ,SAACC,GAAD,OACHlK,GAAoBC,EAGjB,cAAC6J,EAAD,eAAeI,IAFf,cAAC,IAAD,CAAU/J,GAAG,kB,oCCZvByF,GAAe,GAeNuE,OAbf,WAAqD,IAA/BtK,EAA8B,uDAAtB+F,GAAcwE,EAAQ,uCACxCzL,EAAkByL,EAAlBzL,KAAMC,EAAYwL,EAAZxL,QAEd,OAAQD,GACJ,KAAK/B,EACD,MAAM,GAAN,oBAAWiD,GAAX,CAAkBjB,IACtB,KAAK/B,EACD,OAAOgD,EAAMwK,QAAO,SAACjI,GAAD,OAAWA,EAAM3D,KAAOG,KAChD,QACI,OAAOiB,ICFb+F,GAAe,CACjB7G,MAAOK,aAAakL,QAAQ,SAC5BtK,gBAAiB,KACjBC,SAAS,EACT4E,KAAM,MAwCK0F,OArCf,WAAoD,IAA/B1K,EAA8B,uDAAtB+F,GAAcwE,EAAQ,uCACvCzL,EAAkByL,EAAlBzL,KAAMC,EAAYwL,EAAZxL,QAEd,OAAQD,GACJ,KAAK3B,EACD,OAAO,2BACA6C,GADP,IAEIG,iBAAiB,EACjBC,SAAS,EACT4E,KAAMjG,IAEd,KAAK9B,EACL,KAAKI,EAED,OADAkC,aAAaC,QAAQ,QAAST,EAAQG,OAC/B,uCACAc,GACAjB,GAFP,IAGIoB,iBAAiB,EACjBC,SAAS,IAEjB,KAAKlD,EACL,KAAKE,EACL,KAAKE,EACL,KAAKC,EACL,KAAKO,EAED,OADAyB,aAAaE,WAAW,SACjB,2BACAO,GADP,IAEId,MAAO,KACPiB,iBAAiB,EACjBC,SAAS,IAEjB,QACI,OAAOJ,IC1Cb+F,GAAe,CACjBnB,QAAS,KACT4C,SAAU,GACVS,MAAO,GACP7H,SAAS,EACTmB,MAAO,IA6CIoJ,OA1Cf,WAAuD,IAA/B3K,EAA8B,uDAAtB+F,GAAcwE,EAAQ,uCAC1CzL,EAAkByL,EAAlBzL,KAAMC,EAAYwL,EAAZxL,QAEd,OAAQD,GACJ,KAAKtB,EACL,KAAKG,EACD,OAAO,2BACAqC,GADP,IAEI4E,QAAS7F,EACTqB,SAAS,IAEjB,KAAK3C,EACD,OAAO,2BACAuC,GADP,IAEIwH,SAAUzI,EACVqB,SAAS,IAEjB,KAAKxC,EACD,OAAO,2BACAoC,GADP,IAEIuB,MAAOxC,EACPqB,SAAS,EACTwE,QAAS,OAEjB,KAAK/G,EACD,OAAO,2BACAmC,GADP,IAEI4E,QAAS,KACTqD,MAAO,GACP7H,SAAS,IAEjB,KAAK1C,EACD,OAAO,2BACAsC,GADP,IAEIiI,MAAOlJ,EACPqB,SAAS,IAEjB,QACI,OAAOJ,IC5Cb+F,GAAe,CACjB2D,MAAO,GACPvI,KAAM,KACNf,SAAS,EACTmB,MAAO,IAoEIqJ,OAjEf,WAAoD,IAA/B5K,EAA8B,uDAAtB+F,GAAcwE,EAAQ,uCACvCzL,EAAkByL,EAAlBzL,KAAMC,EAAYwL,EAAZxL,QAEd,OAAQD,GACJ,KAAKf,EACD,OAAO,2BACAiC,GADP,IAEI0J,MAAO3K,EACPqB,SAAS,IAEjB,KAAKpC,EACD,OAAO,2BACAgC,GADP,IAEImB,KAAMpC,EACNqB,SAAS,IAEjB,KAAKjC,EACD,OAAO,2BACA6B,GADP,IAEI0J,MAAM,CAAE3K,GAAH,oBAAeiB,EAAM0J,QAC1BtJ,SAAS,IAEjB,KAAKlC,EACD,OAAO,2BACA8B,GADP,IAEI0J,MAAO1J,EAAM0J,MAAMc,QAAO,SAACrJ,GAAD,OAAUA,EAAKgD,MAAQpF,KACjDqB,SAAS,IAEjB,KAAKnC,EACD,OAAO,2BACA+B,GADP,IAEIuB,MAAOxC,EACPqB,SAAS,IAEjB,KAAK9B,EACD,OAAO,2BACA0B,GADP,IAEI0J,MAAO1J,EAAM0J,MAAMlH,KAAI,SAACrB,GAAD,OACnBA,EAAKgD,MAAQpF,EAAQH,GAArB,2BACWuC,GADX,IACiB+H,MAAOnK,EAAQmK,QAC1B/H,OAGlB,KAAK/C,EACD,OAAO,2BACA4B,GADP,IAEImB,KAAK,2BAAMnB,EAAMmB,MAAb,IAAmBgI,SAAUpK,IACjCqB,SAAS,IAEjB,KAAK/B,EACD,OAAO,2BACA2B,GADP,IAEImB,KAAK,2BACEnB,EAAMmB,MADT,IAEAgI,SAAUnJ,EAAMmB,KAAKgI,SAASqB,QAC1B,SAACT,GAAD,OAAaA,EAAQ5F,MAAQpF,OAGrCqB,SAAS,IAEjB,QACI,OAAOJ,ICvEJ6K,8BAAgB,CAC3BtI,SACAtC,QACA2E,WACAzD,UCJE2J,GAAa,CAACC,MAEdC,GAAQC,uBACVC,GALiB,GAOjBC,+BAAoBC,mBAAe,WAAf,EAAmBN,MAQvCO,GAAeL,GAAMM,WAEzBN,GAAMO,WAAU,WAEZ,IAAIC,EAAgBH,GAGpB,GAFAA,GAAeL,GAAMM,WAEjBE,EAAcvL,KAAKf,QAAUmM,GAAapL,KAAKf,MAAO,CACtD,IAAMA,EAAQmM,GAAapL,KAAKf,MAChCD,EAAaC,OAIN8L,U,MCJXzL,aAAaL,OACbD,EAAaM,aAAaL,OAG9B,IAiFeuM,GAjFH,WAKR,OAJAxG,qBAAU,WACN+F,GAAMrM,SAASe,OAChB,IAGC,cAAC,IAAD,CAAUsL,MAAOA,GAAjB,SACI,cAAC,IAAD,UACI,eAAC,WAAD,WACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAIzB,UAAW0B,IACjC,0BAASrL,UAAU,YAAnB,UACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CACImL,OAAK,EACLC,KAAK,YACLzB,UAAW2B,IAEf,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASzB,UAAW4B,IACtC,cAAC,IAAD,CACIJ,OAAK,EACLC,KAAK,YACLzB,UAAW6B,KAEf,cAAC,IAAD,CACIL,OAAK,EACLC,KAAK,eACLzB,UAAW8B,KAGX,cAAC,IAAD,CACIN,OAAK,EACLC,KAAK,cACLzB,UAAW+B,KAInB,cAAC,GAAD,CACIP,OAAK,EACLC,KAAK,aACLzB,UAAWgC,KAEf,cAAC,GAAD,CACIR,OAAK,EACLC,KAAK,kBACLzB,UAAWiC,KAEf,cAAC,GAAD,CACIT,OAAK,EACLC,KAAK,gBACLzB,UAAWkC,KAEf,cAAC,GAAD,CACIV,OAAK,EACLC,KAAK,kBACLzB,UAAWmC,KAEf,cAAC,GAAD,CACIX,OAAK,EACLC,KAAK,iBACLzB,UAAWoC,KAEf,cAAC,GAAD,CACIZ,OAAK,EACLC,KAAK,SACLzB,UAAWqC,KAEf,cAAC,GAAD,CACIb,OAAK,EACLC,KAAK,aACLzB,UAAWsC,mBCrG3CC,IAASrC,OAAO,cAAC,GAAD,IAASsC,SAASC,eAAe,W","file":"static/js/main.8edfebc5.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\n\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const GET_REPOS = 'GET_REPOS';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\n\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\n\nexport const GET_POSTS = 'GET_POSTS';\nexport const GET_POST = 'GET_POST';\nexport const POST_ERROR = 'POST_ERROR';\nexport const DELETE_POST = 'DELETE_POST';\nexport const ADD_POST = 'ADD_POST';\n\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\n\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\n","import { v4 as uuidv4 } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert =\n    (msg, alertType, timeout = 5000) =>\n    (dispatch) => {\n        const id = uuidv4();\n        dispatch({\n            type: SET_ALERT,\n            payload: { msg, alertType, id },\n        });\n\n        setTimeout(\n            () => dispatch({ type: REMOVE_ALERT, payload: id }),\n            timeout\n        );\n    };\n","import axios from 'axios';\n\nconst setAuthToken = (token) => {\n    if (token) {\n        axios.defaults.headers.common['x-auth-token'] = token;\n        localStorage.setItem('token', token);\n    } else {\n        delete axios.defaults.headers.common['x-auth-token'];\n        localStorage.removeItem('token');\n    }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    CLEAR_PROFILE,\n} from './types';\n\n// Load User\nimport setAuthToken from '../utils/setAuthToken';\n\nexport const loadUser = () => async (dispatch) => {\n    if (localStorage.token) {\n        try {\n            setAuthToken(localStorage.token);\n            const res = await axios.get('/api/auth');\n            dispatch({\n                type: USER_LOADED,\n                payload: res.data,\n            });\n        } catch (err) {\n            dispatch({\n                type: AUTH_ERROR,\n            });\n        }\n    } else {\n        dispatch({\n            type: AUTH_ERROR,\n        });\n    }\n};\n\n// Register User\nexport const register =\n    ({ name, email, password }) =>\n    async (dispatch) => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const body = JSON.stringify({ name, email, password });\n\n        try {\n            const res = await axios.post('/api/user', body, config);\n\n            dispatch({\n                type: REGISTER_SUCCESS,\n                payload: res.data,\n            });\n            dispatch(loadUser());\n        } catch (err) {\n            const errors = err.response.data.errors;\n\n            if (errors) {\n                errors.forEach((error) =>\n                    dispatch(setAlert(error.msg, 'danger'))\n                );\n            }\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n        }\n    };\n\n// Login User\nexport const login = (email, password) => async (dispatch) => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post('/api/auth', body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data,\n        });\n\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: LOGIN_FAIL,\n        });\n    }\n};\n\n// Logout Clear Profile\nexport const logout = () => (dispatch) => {\n    dispatch({ type: CLEAR_PROFILE });\n    dispatch({ type: LOGOUT });\n};\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n    const authLinks = (\n        <ul>\n            <li>\n                <Link to='/posts'>\n                    <i className='fas fa-rss-square' />{' '}\n                    <span className='hide-sm'>Posts</span>\n                </Link>{' '}\n            </li>\n            <li>\n                <Link to='/developers'>\n                    <i className='fas fa-dove' />{' '}\n                    <span className='hide-sm'>Developers</span>\n                </Link>{' '}\n            </li>\n\n            <li>\n                <Link to='/profiles'>\n                    <i className='fas fa-couch' />{' '}\n                    <span className='hide-sm'>Community</span>\n                </Link>{' '}\n            </li>\n\n            <li>\n                <Link to='/dashboard'>\n                    <i className='fas fa-user' />{' '}\n                    <span className='hide-sm'>Dashboard</span>\n                </Link>{' '}\n            </li>\n            <li>\n                <a onClick={logout} href='#!'>\n                    <i className='fas fa-sign-out-alt'></i>{' '}\n                    <span className='hide-sm'>Logout</span>\n                </a>\n            </li>\n        </ul>\n    );\n\n    const guestLinks = (\n        <ul>\n            <li>\n                <Link to='/developers'>\n                    <i className='fas fa-dove' />{' '}\n                    <span className='hide-sm'>Developers</span>\n                </Link>{' '}\n                <Link to='/profiles'>\n                    <i className='fas fa-couch' />{' '}\n                    <span className='hide-sm'>Community</span>\n                </Link>{' '}\n            </li>\n            <li>\n                <Link to='/register'>\n                    {' '}\n                    <i className='fas fa-user-plus'> </i> Register\n                </Link>\n            </li>\n            <li>\n                <Link to='/login'>\n                    {' '}\n                    <i className='fas fa-key'> </i> Login\n                </Link>\n            </li>\n        </ul>\n    );\n\n    return (\n        <nav className='navbar bg-primary'>\n            <h1>\n                <Link to='/'>\n                    <i className='fab fa-codepen'></i> DevedIn\n                </Link>\n            </h1>\n            {!loading && (\n                <Fragment>\n                    {' '}\n                    {isAuthenticated ? authLinks : guestLinks}{' '}\n                </Fragment>\n            )}\n        </nav>\n    );\n};\n\nNavbar.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst Landing = ({ isAuthenticated }) => {\n    if (isAuthenticated) {\n        return <Redirect to='/dashboard' />;\n    }\n    return (\n        <section className='landing'>\n            <div className='dark-overlay'>\n                <div className='landing-inner'>\n                    <h1 className='x-large'>DevedIn</h1>\n                    <p className='lead'>\n                        Create a developer profile/portfolio, share posts and\n                        connect with other developers\n                    </p>\n                    <div className='buttons'>\n                        <Link to='/register' className='btn btn-primary'>\n                            Sign Up\n                        </Link>\n                        <Link to='/login' className='btn btn-light'>\n                            Login\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nLanding.propTypes = {\n    isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\n\nimport PropTypes from 'prop-types';\n\n// import axios from 'axios'; // Access backend\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: '',\n    });\n\n    const { name, email, password, password2 } = formData;\n\n    const onChange = (e) =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if (password !== password2) {\n            setAlert('Passwords do not match', 'danger');\n        } else {\n            // const newUser = {\n            //     name: name,\n            //     email: email,\n            //     password: password,\n            // };\n\n            // try {\n            //     const config = {\n            //         headers: {\n            //             'Content-Type': 'application/json',\n            //         },\n            //     };\n\n            //     const body = JSON.stringify(newUser);\n\n            //     const res = await axios.post('/api/user', body, config);\n            //     console.log(res.data);\n            // } catch (err) {\n            //     console.error(err.response.data);\n            // }\n            // console.log('SUCCESS');\n            register({ name, email, password });\n        }\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to='/dashboard' />;\n    }\n\n    return (\n        <Fragment>\n            <h1 className='large text-x-large'>\n                <span> Sign Up</span>\n            </h1>\n            <p className='lead'>\n                <i className='fas fa-skiing'> </i> Create Your Account\n            </p>\n            <form className='form' onSubmit={(e) => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        type='text'\n                        placeholder='Name'\n                        name='name'\n                        value={name}\n                        onChange={(e) => onChange(e)}\n                        //required\n                    />\n                </div>\n\n                <div className='form-group'>\n                    <input\n                        type='email'\n                        placeholder='Email Address'\n                        name='email'\n                        value={email}\n                        onChange={(e) => onChange(e)}\n                        //required\n                    />\n                    <small className='form-text'>\n                        DevedIn uses Gravatar, so use a Gravatar email if you\n                        want a profile image\n                    </small>\n                </div>\n\n                <div className='form-group'>\n                    <input\n                        type='password'\n                        placeholder='Password'\n                        name='password'\n                        value={password}\n                        minLength='6'\n                        onChange={(e) => onChange(e)}\n                        //required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        type='password'\n                        placeholder='Confirm Password'\n                        name='password2'\n                        value={password2}\n                        minLength='6'\n                        onChange={(e) => onChange(e)}\n                        //required\n                    />\n                </div>\n                <input type='submit' value='Register' className='btn btn' />\n            </form>\n            <p className='my-1'>\n                Already have an account?{' '}\n                <Link to='/login' className='btn btn-light'>\n                    Sign In\n                </Link>\n            </p>\n        </Fragment>\n    );\n};\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\n// import axios from 'axios'; // Access backend\n\nconst Login = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '',\n    });\n\n    const { email, password } = formData;\n\n    const onChange = (e) =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        // const newUser = {\n        //     name: name,\n        //     email: email,\n        //     password: password,\n        // };\n\n        // try {\n        //     const config = {\n        //         headers: {\n        //             'Content-Type': 'application/json',\n        //         },\n        //     };\n\n        //     const body = JSON.stringify(newUser);\n\n        //     const res = await axios.post('/api/user', body, config);\n        //     console.log(res.data);\n        // } catch (err) {\n        //     console.error(err.response.data);\n        // }\n        // console.log('SUCCESS');\n        login(email, password);\n    };\n\n    // Redirect if logged in\n    if (isAuthenticated) {\n        return <Redirect to='/dashboard' />;\n    }\n\n    return (\n        <Fragment>\n            <h1 className='large text-x-large'>\n                <span> Sign In</span>\n            </h1>\n            <p className='lead'>\n                <i className='fas fa-skiing'> </i> Sign Into Your Account\n            </p>\n            <form className='form' onSubmit={(e) => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        type='email'\n                        placeholder='Email Address'\n                        name='email'\n                        value={email}\n                        onChange={(e) => onChange(e)}\n                        required\n                    />\n                </div>\n\n                <div className='form-group'>\n                    <input\n                        type='password'\n                        placeholder='Password'\n                        name='password'\n                        value={password}\n                        minLength='6'\n                        onChange={(e) => onChange(e)}\n                        required\n                    />\n                </div>\n\n                <input type='submit' value='Login' className='btn btn' />\n            </form>\n            <p className='my-1'>\n                Don't have an account?{' '}\n                <Link to='/register' className='btn btn-light'>\n                    Sign Up\n                </Link>\n            </p>\n        </Fragment>\n    );\n};\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n    alerts.map((alert) => (\n        <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n            {alert.msg}\n        </div>\n    ));\n\nAlert.propTypes = {\n    alerts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    alerts: state.alert,\n});\n\nexport default connect(mapStateToProps)(Alert);\n","export default __webpack_public_path__ + \"static/media/no-brain-loading.7fab26b8.gif\";","import React, { Fragment } from 'react';\nimport spinner from './no-brain-loading.gif';\n\nconst Spinner = () => (\n    <Fragment>\n        <img\n            src={spinner}\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\n            alt='Loading...'\n        />\n    </Fragment>\n);\n\nexport default Spinner;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const DashboardAction = () => {\n    return (\n        <div className='dash-buttons'>\n            <Link to='/edit-profile' className='btn'>\n                <i className='fas fa-user-circle text-primary'></i> Edit Profile\n            </Link>\n            <Link to='/add-experience' className='btn'>\n                <i className='fas fa-briefcase text-primary'></i> Add Experience\n            </Link>\n            <Link to='/add-education' className='btn'>\n                <i className='fas fa-graduation-cap text-primary'></i> Add\n                Education\n            </Link>\n        </div>\n    );\n};\n","import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n    CLEAR_PROFILE,\n    GET_PROFILE,\n    GET_PROFILES,\n    GET_REPOS,\n    PROFILE_ERROR,\n    UPDATE_PROFILE,\n    ACCOUNT_DELETED,\n} from './types';\n\n// Get current users profile\nexport const getCurrentProfile = () => async (dispatch) => {\n    try {\n        const res = await axios.get('/api/profile/me');\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data,\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Get all profiles\nexport const getProfiles = () => async (dispatch) => {\n    dispatch({ type: CLEAR_PROFILE });\n    try {\n        const res = await axios.get('/api/profile');\n\n        dispatch({\n            type: GET_PROFILES,\n            payload: res.data,\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Get profile by user id\nexport const getProfileById = (userId) => async (dispatch) => {\n    dispatch({ type: CLEAR_PROFILE });\n\n    try {\n        const res = await axios.get(`/api/profile/user/${userId}`);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data,\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Get developers' profile by id\n// export const getDeveloperProfile = () => async (dispatch) => {\n//     try {\n//         const res = await axios.get('/api/profile');\n\n//         dispatch({\n//             type: GET_PROFILE,\n//             payload: res.data,\n//         });\n//     } catch (err) {\n//         dispatch({\n//             type: PROFILE_ERROR,\n//             payload: {\n//                 msg: err.response.statusText,\n//                 status: err.response.status,\n//             },\n//         });\n//     }\n// };\n\n// Get github repos\nexport const getGithubRepos = (username) => async (dispatch) => {\n    try {\n        const res = await axios.get(`/api/profile/github/${username}`);\n\n        dispatch({\n            type: GET_REPOS,\n            payload: res.data,\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Create or update profile\nexport const createProfile =\n    (formData, history, edit = false) =>\n    async (dispatch) => {\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n\n            const res = await axios.post('/api/profile', formData, config);\n\n            dispatch({\n                type: GET_PROFILE,\n                payload: res.data,\n            });\n\n            dispatch(\n                setAlert(\n                    edit ? 'Profile Updated' : 'Profile Created',\n                    'success'\n                )\n            );\n\n            if (!edit) {\n                history.push('/dashboard');\n            }\n        } catch (err) {\n            const errors = err.response.data.errors;\n\n            if (errors) {\n                errors.forEach((error) =>\n                    dispatch(setAlert(error.msg, 'danger'))\n                );\n            }\n\n            dispatch({\n                type: PROFILE_ERROR,\n                payload: {\n                    msg: err.response.data.msg,\n                    status: err.response.status,\n                },\n            });\n        }\n    };\n\n// Add Experience\nexport const addExperience = (formData, history) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const res = await axios.put(\n            '/api/profile/experience',\n            formData,\n            config\n        );\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data,\n        });\n\n        dispatch(setAlert('Experience Added', 'success'));\n\n        history.push('/dashboard');\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.data.msg,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Add Education\nexport const addEducation = (formData, history) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const res = await axios.put('/api/profile/education', formData, config);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data,\n        });\n\n        dispatch(setAlert('Education Added', 'success'));\n\n        history.push('/dashboard');\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.data.msg,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Delete experience\nexport const deleteExperience = (id) => async (dispatch) => {\n    try {\n        const res = await axios.delete(`/api/profile/experience/${id}`);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data,\n        });\n\n        dispatch(setAlert('Experience Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.data.msg,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Delete education\nexport const deleteEducation = (id) => async (dispatch) => {\n    try {\n        const res = await axios.delete(`/api/profile/education/${id}`);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data,\n        });\n\n        dispatch(setAlert('Education Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.data.msg,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Delete Account & Profile\nexport const deleteAccount = () => async (dispatch) => {\n    if (window.confirm('Are you sure? This can not be undone!')) {\n        try {\n            await axios.delete(`/api/profile`);\n\n            dispatch({\n                type: CLEAR_PROFILE,\n            });\n\n            dispatch({\n                type: ACCOUNT_DELETED,\n            });\n\n            dispatch(setAlert('Your account has been permanently deleted!'));\n        } catch (err) {\n            dispatch({\n                type: PROFILE_ERROR,\n                payload: {\n                    msg: err.response.data.msg,\n                    status: err.response.status,\n                },\n            });\n        }\n    }\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { deleteExperience } from '../../actions/profile';\n\nconst Experience = ({ experience, deleteExperience }) => {\n    const experiences = experience.map((exp) => (\n        <tr key={exp._id}>\n            <td>{exp.company}</td>\n            <td className='hide-sm'>{exp.title}</td>\n            <td>\n                <Moment format='YYYY/MM'>{exp.from}</Moment> -{' '}\n                {exp.to === null ? (\n                    ' Now '\n                ) : (\n                    <Moment format='YYYY/MM'>{exp.to}</Moment>\n                )}\n            </td>\n            <td>\n                <button\n                    onClick={() => deleteExperience(exp._id)}\n                    className='btn btn-danger'\n                >\n                    Delete\n                </button>\n            </td>\n        </tr>\n    ));\n    return (\n        <Fragment>\n            <h2 className='my-2'>Experience Credentials</h2>\n            <table className='table'>\n                <thead>\n                    <tr>\n                        <th>Company</th>\n                        <th className='hide-sm'>Title</th>\n                        <th className='hide-sm'>Years</th>\n                        <th />\n                    </tr>\n                </thead>\n                <tbody>{experiences}</tbody>\n            </table>\n        </Fragment>\n    );\n};\n\nExperience.propTypes = {\n    experience: PropTypes.array.isRequired,\n    deleteExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteExperience })(Experience);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { deleteEducation } from '../../actions/profile';\n\nconst Education = ({ education, deleteEducation }) => {\n    const educations = education.map((edu) => (\n        <tr key={edu._id}>\n            <td>{edu.school}</td>\n            <td className='hide-sm'>{edu.degree}</td>\n            <td>\n                <Moment format='YYYY/MM'>{edu.from}</Moment> -{' '}\n                {edu.to === null ? (\n                    ' Now '\n                ) : (\n                    <Moment format='YYYY/MM'>{edu.to}</Moment>\n                )}\n            </td>\n            <td>{edu.fieldofstudy}</td>\n            <td>{edu.gpa}</td>\n            <td>\n                <button\n                    onClick={() => deleteEducation(edu._id)}\n                    className='btn btn-danger'\n                >\n                    Delete\n                </button>\n            </td>\n        </tr>\n    ));\n    return (\n        <Fragment>\n            <h2 className='my-2'>Education Credentials</h2>\n            <table className='table'>\n                <thead>\n                    <tr>\n                        <th>School</th>\n                        <th className='hide-sm'>Degree</th>\n                        <th className='hide-sm'>Years</th>\n                        <th className='hide-sm'>Major</th>\n                        <th className='hide-sm'>GPA</th>\n                        <th />\n                    </tr>\n                </thead>\n                <tbody>{educations}</tbody>\n            </table>\n        </Fragment>\n    );\n};\n\nEducation.propTypes = {\n    education: PropTypes.array.isRequired,\n    deleteEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteEducation })(Education);\n","import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { DashboardAction } from './DashboardAction';\nimport Experience from './Experience';\nimport Education from './Education';\nimport { deleteAccount, getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({\n    getCurrentProfile,\n    deleteAccount,\n    auth: { user },\n    profile: { profile, loading },\n}) => {\n    useEffect(() => {\n        getCurrentProfile();\n    }, [getCurrentProfile]);\n\n    return loading && profile === null ? (\n        <Spinner />\n    ) : (\n        <Fragment>\n            <h1 className='large text-white'>Dashboard</h1>\n            <p className='lead'>\n                <i className='fas fa-id-badge'></i> Welcome back,{' '}\n                {user && user.name} !\n            </p>\n\n            {profile !== null ? (\n                <Fragment>\n                    {' '}\n                    <DashboardAction />{' '}\n                    <Experience experience={profile.experience}></Experience>\n                    <Education education={profile.education}></Education>\n                    <div className='my-2'>\n                        <button\n                            className='btn btn-danger'\n                            onClick={() => deleteAccount()}\n                        >\n                            <i className='fas fa-user-minus'></i> Delete my\n                            account\n                        </button>\n                    </div>\n                </Fragment>\n            ) : (\n                <Fragment>\n                    <p className='text-small'>\n                        You have not yet setup a profile, please add some\n                        info...\n                    </p>\n                    <Link to='/create-profile' className='btn btn-danger my-1'>\n                        Create Profile\n                    </Link>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n    deleteAccount: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\n    Dashboard\n);\n","import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile } from '../../actions/profile';\n\nconst CreateProfile = ({ createProfile, history }) => {\n    const [formData, setFormData] = useState({\n        company: '',\n        website: '',\n        location: '',\n        status: '',\n        skills: '',\n        githubusername: '',\n        bio: '',\n        twitter: '',\n        facebook: '',\n        linkedin: '',\n        youtube: '',\n        instagram: '',\n    });\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n    const {\n        company,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        facebook,\n        linkedin,\n        youtube,\n        instagram,\n    } = formData;\n\n    const onChange = (e) =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        createProfile(formData, history);\n    };\n\n    return (\n        <Fragment>\n            <h1 className='large text-x-large'>\n                <span>Create Your Profile</span>\n            </h1>\n            <p className='lead'>\n                <i className='fas fa-user'></i> Tell us about yourself\n            </p>\n            <p className='text-small'>* = required fields</p>\n            <form className='form' onSubmit={(e) => onSubmit(e)}>\n                <div className='form-group'>\n                    <select\n                        name='status'\n                        value={status}\n                        onChange={(e) => onChange(e)}\n                    >\n                        <option value='0'>\n                            * Select Your Current Professional Status\n                        </option>\n                        <option value='Developer'>Developer</option>\n                        <option value='Student'>Student</option>\n                        <option value='Intern'>Intern</option>\n                        <option value='Recruiter'>Recruiter</option>\n                    </select>\n                    <p className='text-small'>\n                        Tell us where you are in your career\n                    </p>\n                </div>\n                <div className='form-group'>\n                    <input\n                        type='text'\n                        placeholder='Company / School'\n                        name='company'\n                        value={company}\n                        onChange={(e) => onChange(e)}\n                    />\n                </div>\n\n                <div className='form-group'>\n                    <input\n                        type='text'\n                        placeholder='Location'\n                        name='location'\n                        id=''\n                        value={location}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <p className='text-small'>\n                        City & State suggested (eg. Seattle, WA)\n                    </p>\n                </div>\n\n                <div className='form-group'>\n                    <input\n                        type='text'\n                        placeholder='* Skills'\n                        name='skills'\n                        value={skills}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <p className='text-small'>\n                        Please use comma separated values (eg. Java, Python,\n                        HTML)\n                    </p>\n                </div>\n                <div className='form-group'>\n                    <input\n                        type='text'\n                        placeholder='Github Username'\n                        name='githubusername'\n                        value={githubusername}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <p className='text-small'>\n                        If you want your latest github repos in your profile\n                    </p>\n                </div>\n\n                <div className='form-group'>\n                    <textarea\n                        type='text'\n                        placeholder='Introduce Yourself'\n                        name='bio'\n                        value={bio}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <p className='text-small'>Add a short bio of yourself</p>\n                </div>\n\n                <div className='my-2'>\n                    <button\n                        onClick={() => toggleSocialInputs(!displaySocialInputs)}\n                        type='button'\n                        className='btn btn-light'\n                    >\n                        Add Social Networks (Optional)\n                    </button>\n                </div>\n\n                {displaySocialInputs && (\n                    <Fragment>\n                        {' '}\n                        <div className='form-group social-input'>\n                            <i className='fab fa-instagram fa-2x'></i>\n                            <input\n                                type='text'\n                                placeholder='Instagram URL'\n                                name='instagram'\n                                value={instagram}\n                                onChange={(e) => onChange(e)}\n                            />\n                        </div>\n                        <div className='form-group social-input'>\n                            <i className='fab fa-facebook fa-2x'></i>\n                            <input\n                                type='text'\n                                placeholder='Facebook URL'\n                                name='facebook'\n                                value={facebook}\n                                onChange={(e) => onChange(e)}\n                            />\n                        </div>\n                        <div className='form-group social-input'>\n                            <i className='fab fa-linkedin fa-2x'></i>\n                            <input\n                                type='text'\n                                placeholder='LinkedIn URL'\n                                name='linkedin'\n                                value={linkedin}\n                                onChange={(e) => onChange(e)}\n                            />\n                        </div>\n                        <div className='form-group social-input'>\n                            <i className='fab fa-youtube fa-2x' />{' '}\n                            <input\n                                type='text'\n                                placeholder='YouTube URL'\n                                name='youtube'\n                                value={youtube}\n                                onChange={(e) => onChange(e)}\n                            />\n                        </div>\n                    </Fragment>\n                )}\n\n                <input\n                    type='submit'\n                    className='btn btn-highlight my-1'\n                    placeholder='Submit'\n                />\n                <Link className='btn btn-light my-1' to='/dashboard'>\n                    Go Back\n                </Link>\n            </form>\n        </Fragment>\n    );\n};\n\nCreateProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst initialState = {\n    company: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n};\n\nconst EditProfile = ({\n    profile: { profile, loading },\n    createProfile,\n    getCurrentProfile,\n    history,\n}) => {\n    const [formData, setFormData] = useState(initialState);\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n    useEffect(() => {\n        if (!profile) getCurrentProfile();\n\n        if (!loading && profile) {\n            const profileData = { ...initialState };\n            for (const key in profile) {\n                if (key in profileData) profileData[key] = profile[key];\n            }\n            for (const key in profile.social) {\n                if (key in profileData) profileData[key] = profile.social[key];\n            }\n            // the skills may be an array from our API response\n            if (Array.isArray(profileData.skills))\n                profileData.skills = profileData.skills.join(', ');\n            // set local state with the profileData\n            setFormData(profileData);\n        }\n    }, [loading, getCurrentProfile, profile]);\n\n    const {\n        company,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        facebook,\n        linkedin,\n        youtube,\n        instagram,\n    } = formData;\n\n    const onChange = (e) =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        createProfile(formData, history, true);\n    };\n\n    return (\n        <Fragment>\n            <h1 className='large text-x-large'>\n                <span>Create Your Profile</span>\n            </h1>\n            <p className='lead'>\n                <i className='fas fa-user'></i> Tell us about yourself\n            </p>\n            <p className='text-small'>* = required fields</p>\n            <form className='form' onSubmit={(e) => onSubmit(e)}>\n                <div className='form-group'>\n                    <select\n                        name='status'\n                        value={status}\n                        onChange={(e) => onChange(e)}\n                    >\n                        <option value='0'>\n                            * Select Your Current Professional Status\n                        </option>\n                        <option value='Developer'>Developer</option>\n                        <option value='Student'>Student</option>\n                        <option value='Intern'>Intern</option>\n                        <option value='Recruiter'>Recruiter</option>\n                    </select>\n                    <p className='text-small'>\n                        Tell us where you are in your career\n                    </p>\n                </div>\n                <div className='form-group'>\n                    <input\n                        type='text'\n                        placeholder='Company / School'\n                        name='company'\n                        value={company}\n                        onChange={(e) => onChange(e)}\n                    />\n                </div>\n\n                <div className='form-group'>\n                    <input\n                        type='text'\n                        placeholder='Location'\n                        name='location'\n                        id=''\n                        value={location}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <p className='text-small'>\n                        City & State suggested (eg. Seattle, WA)\n                    </p>\n                </div>\n\n                <div className='form-group'>\n                    <input\n                        type='text'\n                        placeholder='* Skills'\n                        name='skills'\n                        value={skills}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <p className='text-small'>\n                        Please use comma separated values (eg. Java, Python,\n                        HTML)\n                    </p>\n                </div>\n                <div className='form-group'>\n                    <input\n                        type='text'\n                        placeholder='Github Username'\n                        name='githubusername'\n                        value={githubusername}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <p className='text-small'>\n                        If you want your latest github repos in your profile\n                    </p>\n                </div>\n\n                <div className='form-group'>\n                    <textarea\n                        type='text'\n                        placeholder='Introduce Yourself'\n                        name='bio'\n                        value={bio}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <p className='text-small'>Add a short bio of yourself</p>\n                </div>\n\n                <div className='my-2'>\n                    <button\n                        onClick={() => toggleSocialInputs(!displaySocialInputs)}\n                        type='button'\n                        className='btn btn-light'\n                    >\n                        Add Social Networks (Optional)\n                    </button>\n                </div>\n\n                {displaySocialInputs && (\n                    <Fragment>\n                        {' '}\n                        <div className='form-group social-input'>\n                            <i className='fab fa-instagram fa-2x'></i>\n                            <input\n                                type='text'\n                                placeholder='Instagram URL'\n                                name='instagram'\n                                value={instagram}\n                                onChange={(e) => onChange(e)}\n                            />\n                        </div>\n                        <div className='form-group social-input'>\n                            <i className='fab fa-facebook fa-2x'></i>\n                            <input\n                                type='text'\n                                placeholder='Facebook URL'\n                                name='facebook'\n                                value={facebook}\n                                onChange={(e) => onChange(e)}\n                            />\n                        </div>\n                        <div className='form-group social-input'>\n                            <i className='fab fa-linkedin fa-2x'></i>\n                            <input\n                                type='text'\n                                placeholder='LinkedIn URL'\n                                name='linkedin'\n                                value={linkedin}\n                                onChange={(e) => onChange(e)}\n                            />\n                        </div>\n                        <div className='form-group social-input'>\n                            <i className='fab fa-youtube fa-2x' />{' '}\n                            <input\n                                type='text'\n                                placeholder='YouTube URL'\n                                name='youtube'\n                                value={youtube}\n                                onChange={(e) => onChange(e)}\n                            />\n                        </div>\n                    </Fragment>\n                )}\n\n                <input\n                    type='submit'\n                    className='btn btn-highlight my-1'\n                    placeholder='Submit'\n                />\n                <Link className='btn btn-light my-1' to='/dashboard'>\n                    Go Back\n                </Link>\n            </form>\n        </Fragment>\n    );\n};\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n    withRouter(EditProfile)\n);\n","import React, { Fragment, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({ addExperience, history }) => {\n    const [formData, setFormData] = useState({\n        company: '',\n        title: '',\n        location: '',\n        form: '',\n        to: '',\n        current: false,\n        description: '',\n    });\n\n    const [toDateDisabled, toggleDisabled] = useState(false);\n\n    const { company, title, location, from, to, current, description } =\n        formData;\n\n    const onChange = (e) =>\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value,\n        });\n\n    return (\n        <Fragment>\n            <h1 class='large text-x-large'>\n                <span>Add an experience</span>\n            </h1>\n            <p class='lead'>\n                <i class='fas fa-briefcase'> </i>\n                Add your prior / current positions\n            </p>\n            <p class='text-small'>* = required fields</p>\n            <form\n                class='form'\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    addExperience(formData, history);\n                }}\n            >\n                <div class='form-group'>\n                    <input\n                        type='text'\n                        placeholder='* Job Title'\n                        name='title'\n                        value={title}\n                        onChange={(e) => onChange(e)}\n                        required\n                    />\n                </div>\n                <div class='form-group'>\n                    <input\n                        type='text'\n                        placeholder='* Company'\n                        name='company'\n                        value={company}\n                        onChange={(e) => onChange(e)}\n                        required\n                    />\n                </div>\n\n                <div class='form-group'>\n                    <input\n                        type='text'\n                        placeholder='Location'\n                        name='location'\n                        value={location}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <p class='text-small'>\n                        City & State suggested (eg. Seattle, WA)\n                    </p>\n                </div>\n\n                <div class='form-group'>\n                    <h4 class='text-small'>Start Date</h4>\n                    <input\n                        type='date'\n                        name='from'\n                        value={from}\n                        onChange={(e) => onChange(e)}\n                    />\n                </div>\n\n                <div class='form-group'>\n                    <h4 class='text-small'>End Date</h4>\n\n                    <input\n                        type='date'\n                        name='to'\n                        value={to}\n                        onChange={(e) => onChange(e)}\n                        disabled={toDateDisabled ? 'disabled' : ''}\n                    />\n\n                    <p class='text-small'>\n                        <input\n                            type='checkbox'\n                            name='current'\n                            checked={current}\n                            value={current}\n                            onChange={(e) => {\n                                setFormData({\n                                    ...formData,\n                                    current: !current,\n                                });\n                                toggleDisabled(!toDateDisabled);\n                            }}\n                        />{' '}\n                        I currently work here\n                    </p>\n                </div>\n\n                <div class='form-group'>\n                    <textarea\n                        name='description'\n                        cols='30'\n                        rows='5'\n                        placeholder='Job Description'\n                        value={description}\n                        onChange={(e) => onChange(e)}\n                    ></textarea>\n                </div>\n\n                <input\n                    type='submit'\n                    class='btn btn-highlight my-1'\n                    placeholder='Submit'\n                />\n                <a class='btn btn-light my-1' href='dashboard.html'>\n                    Go Back\n                </a>\n            </form>\n        </Fragment>\n    );\n};\n\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addExperience })(withRouter(AddExperience));\n","import React, { Fragment, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addEducation } from '../../actions/profile';\n\nconst AddEducation = ({ addEducation, history }) => {\n    const [formData, setFormData] = useState({\n        school: '',\n        degree: '',\n        fieldofstudy: '',\n        form: '',\n        to: '',\n        current: false,\n        gpa: '',\n    });\n\n    const [toDateDisabled, toggleDisabled] = useState(false);\n\n    const { school, degree, fieldofstudy, from, to, current, gpa } = formData;\n\n    const onChange = (e) =>\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value,\n        });\n\n    return (\n        <Fragment>\n            <h1 class='large text-x-large'>\n                <span>Add education</span>\n            </h1>\n            <p class='lead'>\n                <i class='fas fa-briefcase'> </i>\n                Add your prior / current schools\n            </p>\n            <p class='text-small'>* = required fields</p>\n            <form\n                class='form'\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    addEducation(formData, history);\n                }}\n            >\n                <div class='form-group'>\n                    <input\n                        type='text'\n                        placeholder='* School'\n                        name='school'\n                        value={school}\n                        onChange={(e) => onChange(e)}\n                        required\n                    />\n                </div>\n                <div class='form-group'>\n                    <input\n                        type='text'\n                        placeholder='* Degree'\n                        name='degree'\n                        value={degree}\n                        onChange={(e) => onChange(e)}\n                        required\n                    />\n                </div>\n\n                <div class='form-group'>\n                    <input\n                        type='text'\n                        placeholder='Field of study'\n                        name='fieldofstudy'\n                        value={fieldofstudy}\n                        onChange={(e) => onChange(e)}\n                    />\n                </div>\n\n                <div class='form-group'>\n                    <h4 class='text-white'>Start Date</h4>\n                    <input\n                        type='month'\n                        name='from'\n                        value={from}\n                        onChange={(e) => onChange(e)}\n                    />\n                </div>\n\n                <div class='form-group'>\n                    <h4 class='text-white'>End Date (Expected)</h4>\n\n                    <input\n                        type='month'\n                        name='to'\n                        value={to}\n                        onChange={(e) => onChange(e)}\n                        disabled={toDateDisabled ? 'disabled' : ''}\n                    />\n\n                    <p class='text-small'>\n                        <input\n                            type='checkbox'\n                            name='current'\n                            checked={current}\n                            value={current}\n                            onChange={(e) => {\n                                setFormData({\n                                    ...formData,\n                                    current: !current,\n                                });\n                                toggleDisabled(!toDateDisabled);\n                            }}\n                        />{' '}\n                        I am currently a student here\n                    </p>\n                </div>\n\n                <div class='form-group'>\n                    <input\n                        type='text'\n                        placeholder='GPA'\n                        name='gpa'\n                        value={gpa}\n                        onChange={(e) => onChange(e)}\n                    />\n                </div>\n\n                <input\n                    type='submit'\n                    class='btn btn-highlight my-1'\n                    placeholder='Submit'\n                />\n                <a class='btn btn-light my-1' href='dashboard.html'>\n                    Go Back\n                </a>\n            </form>\n        </Fragment>\n    );\n};\n\nAddEducation.propTypes = {\n    addEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addEducation })(withRouter(AddEducation));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ProfileItem = ({\n    profile: {\n        user: { _id, name, avatar },\n        status,\n        company,\n        location,\n        skills,\n    },\n}) => {\n    return (\n        <div className='profile bg-light'>\n            <img src={avatar} alt='' className='round-img' />\n            <div>\n                <h2>{name}</h2>\n                <p>\n                    {status} {company && <span> at {company}</span>}\n                </p>\n                <p className='my-1-primary'>\n                    {location && <span>{location}</span>}\n                </p>\n                <Link to={`/profile/${_id}`} className='btn btn-primary'>\n                    {' '}\n                    View <span> {name}'s </span> Profile\n                </Link>\n            </div>\n            <ul>\n                {skills.slice(0, 4).map((skill, index) => (\n                    <li key={index} className='text-primary-regular'>\n                        <i className='fas fa-check'></i> {skill}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nProfileItem.propTypes = {\n    profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileItem;\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from '../profiles/ProfileItem';\n\nimport { getProfiles } from '../../actions/profile';\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n    useEffect(() => {\n        getProfiles();\n    }, [getProfiles]);\n\n    return (\n        <Fragment>\n            {loading ? (\n                <Spinner />\n            ) : (\n                <Fragment>\n                    <h1 className='large text-x-large'> Community</h1>\n                    <p className='lead'>\n                        <i className='fas fa-address-card fa-2x'> </i> Browse\n                        and connect with other developers\n                    </p>\n                    <div className='profiles'>\n                        {profiles.length > 0 ? (\n                            profiles.map((profile) => (\n                                <ProfileItem\n                                    key={profile._id}\n                                    profile={profile}\n                                />\n                            ))\n                        ) : (\n                            <h4> No Profiles Found...</h4>\n                        )}\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileTop = ({\n    profile: {\n        status,\n        company,\n        location,\n        website,\n        social,\n        user: { name, avatar },\n    },\n}) => {\n    return (\n        <div className='profile-top bg-primary p-2'>\n            <img className='round-img my-1' src={avatar} alt='' />\n            <h1 className='large'>{name}</h1>\n            <p className='lead'>\n                {status} {company && <span> at {company}</span>}\n            </p>\n            <p>{location && <span>{location}</span>}</p>\n            <div className='icons my-1'>\n                {website && (\n                    <a href={website} target='_blank' rel='noopener noreferrer'>\n                        <i className='fas ga-globe fa-2x'></i>\n                    </a>\n                )}\n                {social && social.instagram && (\n                    <a\n                        href={social.instagram}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        <i className='fab fa-instagram fa-2x'></i>\n                    </a>\n                )}\n                {social && social.linkedin && (\n                    <a\n                        href={social.linkedin}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        <i className='fab fa-linkedin fa-2x'></i>\n                    </a>\n                )}\n                {social && social.youtube && (\n                    <a\n                        href={social.youtube}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        <i className='fab fa-youtube fa-2x'></i>\n                    </a>\n                )}\n            </div>\n        </div>\n    );\n};\n\nProfileTop.propTypes = {\n    profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileTop;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileAbout = ({\n    profile: {\n        bio,\n        skills,\n        user: { name },\n    },\n}) => {\n    return (\n        <div className='profile-about bg-light p-2'>\n            {bio && (\n                <Fragment>\n                    <h2 className='text-primary'>\n                        {name.trim().split(' ')[0]}'s Bio\n                    </h2>\n                    <p>{bio}</p>\n                    <div className='line'></div>\n                </Fragment>\n            )}\n\n            <h2 className='text-primary'>Skill Set</h2>\n            <div className='skills'>\n                {skills.map((skill, index) => (\n                    <div key={index} className='p-1'>\n                        <i className='fas fa-check'></i>\n                        {skill}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nProfileAbout.propTypes = {\n    profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileAbout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nconst ProfileExperience = ({\n    experience: { company, title, location, current, to, from, description },\n}) => {\n    return (\n        <div>\n            <h3 className='text text-light'>{company}</h3>\n            <p>\n                <Moment format='YYYY/MM'>{from}</Moment> -{' '}\n                {!to ? ' Now' : <Moment format='YYYY/MM'>{to}</Moment>}\n            </p>\n            <h4 className='text text-primary-regular my-1-primary '>\n                Position:{' '}\n            </h4>{' '}\n            {title}\n            <h4 className='text text-primary-regular my-1-primary '>\n                Description:{' '}\n            </h4>{' '}\n            {description}\n        </div>\n    );\n};\n\nProfileExperience.propTypes = {\n    experience: PropTypes.object.isRequired,\n};\n\nexport default ProfileExperience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nconst ProfileEducation = ({\n    education: { school, degree, fieldofstudy, current, to, from, gpa },\n}) => {\n    return (\n        <div>\n            <h3 className='text text-light'>{school}</h3>\n            <p>\n                <Moment format='YYYY/MM'>{from}</Moment> -{' '}\n                {!to ? ' Now' : <Moment format='YYYY/MM'>{to}</Moment>}\n            </p>\n            <h4 className='text text-primary-regular'>Degree: </h4> {degree}\n            <h4 className='text text-primary-regular'>Field of Study: </h4>{' '}\n            {fieldofstudy}\n            <h4 className='text text-primary-regular'>GPA: </h4> {gpa}\n        </div>\n    );\n};\n\nProfileEducation.propTypes = {\n    education: PropTypes.object.isRequired,\n};\n\nexport default ProfileEducation;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n    useEffect(() => {\n        getGithubRepos(username);\n    }, [getGithubRepos, username]);\n    return (\n        <div className='profile-github'>\n            <h2 className='text-primary my-1'>Github Repos</h2>\n            {repos === null ? (\n                <Spinner />\n            ) : (\n                repos.map((repo) => (\n                    <div key={repo.id} className='repo bg-white p-1 my-1'>\n                        <div>\n                            <h4>\n                                <a\n                                    className='text my-1-primary {'\n                                    href={repo.html_url}\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                >\n                                    {repo.name}\n                                </a>\n                            </h4>\n                            <p>{repo.description}</p>\n                        </div>\n                        <div>\n                            <ul>\n                                <li className='badge badge-primary'>\n                                    Stars: {repo.stargazers_count}\n                                </li>\n                                <li className='badge badge-primary'>\n                                    Watchers: {repo.watchers_count}\n                                </li>{' '}\n                                <li className='badge badge-primary'>\n                                    Forks: {repo.forks_count}\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                ))\n            )}\n        </div>\n    );\n};\n\nProfileGithub.propTypes = {\n    getGithubRepos: PropTypes.func.isRequired,\n    repos: PropTypes.array.isRequired,\n    username: PropTypes.string.isRequired,\n};\nconst mapStateToProps = (state) => ({\n    repos: state.profile.repos,\n});\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\n\nimport { getProfileById } from '../../actions/profile';\n\nconst Profile = ({\n    getProfileById,\n    profile: { profile, loading },\n    auth,\n    match,\n}) => {\n    useEffect(() => {\n        getProfileById(match.params.id);\n    }, [getProfileById, match.params.id]);\n    return (\n        <Fragment>\n            {profile === null || loading ? (\n                <Spinner />\n            ) : (\n                <Fragment>\n                    <Link to='/profiles' className='btn btn-light'>\n                        Back to community\n                    </Link>\n                    {auth.isAuthenticated &&\n                        auth.loading === false &&\n                        auth.user._id === profile.user._id && (\n                            <Link to='/edit-profile' className='btn btn-light'>\n                                {' '}\n                                Edit my profile\n                            </Link>\n                        )}\n                    <div className='profile-grid my-1'>\n                        <ProfileTop profile={profile}></ProfileTop>\n                        <ProfileAbout profile={profile}></ProfileAbout>\n\n                        <div className='profile-edu bg-white p-2'>\n                            <h2 className='text-primary'>Education</h2>\n                            {profile.education.length > 0 ? (\n                                <Fragment>\n                                    {profile.education.map((education) => (\n                                        <ProfileEducation\n                                            key={education._id}\n                                            education={education}\n                                        />\n                                    ))}\n                                </Fragment>\n                            ) : (\n                                <h4> No education added yet</h4>\n                            )}\n                        </div>\n\n                        <div className='profile-exp bg-white p-2'>\n                            <h2 className='text-primary'>Experience</h2>\n                            {profile.experience.length > 0 ? (\n                                <Fragment>\n                                    {profile.experience.map((experience) => (\n                                        <ProfileExperience\n                                            key={experience._id}\n                                            experience={experience}\n                                        />\n                                    ))}\n                                </Fragment>\n                            ) : (\n                                <h4> No experience added yet</h4>\n                            )}\n                        </div>\n\n                        {profile.githubusername && (\n                            <ProfileGithub username={profile.githubusername} />\n                        )}\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nProfile.propTypes = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from '../profiles/ProfileItem';\n\nimport { getProfiles } from '../../actions/profile';\n\nconst Developers = ({ getProfiles, profile: { profiles, loading } }) => {\n    useEffect(() => {\n        getProfiles();\n    }, [getProfiles]);\n\n    return (\n        <Fragment>\n            {loading ? (\n                <Spinner />\n            ) : (\n                <Fragment>\n                    <h1 className='large text-x-large'> Developers </h1>\n                    <p className='lead'>\n                        <i className='fas fa-piggy-bank fa-2x'> </i> Browse and\n                        connect with DevedIn's developers\n                    </p>\n                    <div className='profiles'>\n                        {profiles.map((profile) =>\n                            profile.user.name === 'Rui Zhu' ||\n                            profile.user.name === 'Xinyu Hou' ? (\n                                <ProfileItem\n                                    key={profile._id}\n                                    profile={profile}\n                                />\n                            ) : (\n                                <h4> </h4>\n                            )\n                        )}\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nDevelopers.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfiles })(Developers);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n    addLike,\n    removeLike,\n    deletePost,\n    auth,\n    post: { _id, text, name, avatar, user, likes, comments, date },\n    showActions,\n}) => {\n    return (\n        <div className='post bg-white my-1 p-1'>\n            <div>\n                <Link to={`/profile/${user}`}>\n                    <img className='round-img my-1' src={avatar} alt='' />\n                    <h4 className='text-dark'>{name}</h4>\n                </Link>\n            </div>\n\n            <div>\n                <p className='my-1-dark'>{text}</p>\n                <p className='post-date'>\n                    Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n                </p>\n\n                {showActions && (\n                    <Fragment>\n                        <button onClick={() => addLike(_id)} className='btn'>\n                            <i className='fas fa-thumbs-up'></i>{' '}\n                            <span>\n                                {likes.length > 0 && (\n                                    <span>{likes.length}</span>\n                                )}\n                            </span>\n                        </button>\n                        <button onClick={() => removeLike(_id)} className='btn'>\n                            <i className='fas fa-thumbs-down'></i>{' '}\n                        </button>\n                        <Link to={`/posts/${_id}`} className='btn btn-primary'>\n                            Discussion\n                            {comments.length > 0 && (\n                                <span className='comment-count'>\n                                    {comments.length}\n                                </span>\n                            )}\n                        </Link>\n                        {!auth.loading && user === auth.user._id && (\n                            <button\n                                onClick={(e) => deletePost(_id)}\n                                type='button'\n                                className='btn btn-danger'\n                            >\n                                Delete <i className='fas fa-times'></i>\n                            </button>\n                        )}\n                    </Fragment>\n                )}\n            </div>\n        </div>\n    );\n};\n\nPostItem.defaultProps = {\n    showActions: true,\n};\n\nPostItem.propTypes = {\n    post: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    addLike: PropTypes.func.isRequired,\n    removeLike: PropTypes.func.isRequired,\n    deletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n    PostItem\n);\n","import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT,\n} from './types';\n\n// Get posts\nexport const getPosts = () => async (dispatch) => {\n    try {\n        const res = await axios.get('/api/post');\n\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data,\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Get like\nexport const addLike = (id) => async (dispatch) => {\n    try {\n        const res = await axios.put(`/api/post/like/${id}`);\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { id, likes: res.data },\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Remove like\nexport const removeLike = (id) => async (dispatch) => {\n    try {\n        const res = await axios.put(`/api/post/unlike/${id}`);\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { id, likes: res.data },\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Delete post\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await axios.delete(`/api/post/${id}`);\n\n        dispatch({\n            type: DELETE_POST,\n            payload: id,\n        });\n\n        dispatch(setAlert('Post removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Add post\nexport const addPost = (formData) => async (dispatch) => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n    try {\n        const res = await axios.post('/api/post', formData, config);\n\n        dispatch({\n            type: ADD_POST,\n            payload: res.data,\n        });\n\n        dispatch(setAlert('Post created', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Get a single post\nexport const getPost = (id) => async (dispatch) => {\n    try {\n        const res = await axios.get(`/api/post/${id}`);\n\n        dispatch({\n            type: GET_POST,\n            payload: res.data,\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Add a comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n    try {\n        const res = await axios.post(\n            `/api/post/comment/${postId}`,\n            formData,\n            config\n        );\n\n        dispatch({\n            type: ADD_COMMENT,\n            payload: res.data,\n        });\n\n        dispatch(setAlert('Comment added', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Delete a comment\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n    try {\n        await axios.delete(`/api/post/comment/${postId}/${commentId}`);\n\n        dispatch({\n            type: REMOVE_COMMENT,\n            payload: commentId,\n        });\n\n        dispatch(setAlert('Comment removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\n\nconst PostForm = ({ addPost }) => {\n    const [text, setText] = useState('');\n\n    return (\n        <div className='post-form'>\n            <div className='post-form-header bg-primary'>\n                <h3>Create a post </h3>\n            </div>\n            <form\n                className='form my-1'\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    addPost({ text });\n                    setText('');\n                }}\n            >\n                <textarea\n                    name='text'\n                    cols='30'\n                    rows='5'\n                    placeholder='Write down your thoughts here'\n                    value={text}\n                    onChange={(e) => setText(e.target.value)}\n                    required\n                ></textarea>\n                <input\n                    type='submit'\n                    value='Submit'\n                    className='btn btn-dark my-1'\n                />\n            </form>\n        </div>\n    );\n};\n\nPostForm.propTypes = {\n    addPost: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addPost })(PostForm);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from './PostItem';\nimport PostForm from './PostForm';\nimport { getPosts } from '../../actions/post';\n\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\n    useEffect(() => {\n        getPosts();\n    }, [getPosts]);\n\n    return loading ? (\n        <Spinner />\n    ) : (\n        <Fragment>\n            <h1 className='large text-x-large'> Posts</h1>\n            <p className='lead'>\n                <i className='fas fa-user'></i> Welcome to the community!\n            </p>\n            <PostForm />\n            <div className='posts'>\n                {posts.map((post) => (\n                    <PostItem key={post._id} post={post} />\n                ))}\n            </div>\n        </Fragment>\n    );\n};\n\nPosts.propTypes = {\n    getPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addComment } from '../../actions/post';\n\nconst CommentForm = ({ postId, addComment }) => {\n    const [text, setText] = useState('');\n\n    return (\n        <div className='post-form'>\n            <div className='post-form-header bg-primary'>\n                <h3>Leave a comment </h3>\n            </div>\n            <form\n                className='form my-1'\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    addComment(postId, { text });\n                    setText('');\n                }}\n            >\n                <textarea\n                    name='text'\n                    cols='30'\n                    rows='5'\n                    placeholder='Write down your thoughts here'\n                    value={text}\n                    onChange={(e) => setText(e.target.value)}\n                    required\n                ></textarea>\n                <input\n                    type='submit'\n                    value='Submit'\n                    className='btn btn-dark my-1'\n                />\n            </form>\n        </div>\n    );\n};\n\nCommentForm.propTypes = {\n    addComment: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addComment })(CommentForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteComment } from '../../actions/post';\n\nconst CommentItem = ({\n    postId,\n    comment: { _id, text, name, avatar, user, date },\n    auth,\n    deleteComment,\n}) => {\n    return (\n        <div class='post bg-white my-1'>\n            <div>\n                <Link to={`/profile/${user}`}>\n                    <img class='round-img my-1' src={avatar} alt='' />\n                    <h4>{name}</h4>\n                </Link>\n            </div>\n\n            <div>\n                <p class='my-1-dark'>{text}</p>\n\n                <p className='post-date'>\n                    Commented on <Moment format='YYYY/MM/DD'>{date}</Moment>\n                </p>\n                {!auth.loading && user === auth.user._id && (\n                    <button\n                        onClick={(e) => deleteComment(postId, _id)}\n                        type='button'\n                        className='btn btn-danger'\n                    >\n                        <i className='fas fa-times'></i> Remove my comment\n                    </button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nCommentItem.propTypes = {\n    postId: PropTypes.number.isRequired,\n    comment: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\nimport { getPost } from '../../actions/post';\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n    useEffect(() => {\n        getPost(match.params.id);\n    }, [getPost, match.params.id]);\n\n    return loading || post === null ? (\n        <Spinner></Spinner>\n    ) : (\n        <Fragment>\n            <Link to='/posts' className='btn'>\n                Back to Community\n            </Link>\n            <PostItem post={post} showActions={false}></PostItem>\n            <CommentForm postId={post._id} />\n            <div className='comments'>\n                {post.comments.map((comment) => (\n                    <CommentItem\n                        key={comment._id}\n                        comment={comment}\n                        postId={post._id}\n                    />\n                ))}\n            </div>\n        </Fragment>\n    );\n};\n\nPost.propTypes = {\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n    component: Component,\n    auth: { isAuthenticated, loading },\n    ...rest\n}) => (\n    <Route\n        {...rest}\n        render={(props) =>\n            !isAuthenticated && !loading ? (\n                <Redirect to='/login' />\n            ) : (\n                <Component {...props} />\n            )\n        }\n    />\n);\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nfunction alertReducer(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case SET_ALERT:\n            return [...state, payload];\n        case REMOVE_ALERT:\n            return state.filter((alert) => alert.id !== payload);\n        default:\n            return state;\n    }\n}\n\nexport default alertReducer;\n","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    ACCOUNT_DELETED,\n} from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true, // once we make our request and get the data or get the response, then we'll set it to false. So we know that it's been loaded.\n    user: null,\n};\n\nfunction authReducer(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload,\n            };\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false,\n            };\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n        case ACCOUNT_DELETED:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n            };\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;\n","import {\n    CLEAR_PROFILE,\n    GET_PROFILE,\n    GET_PROFILES,\n    GET_REPOS,\n    PROFILE_ERROR,\n    UPDATE_PROFILE,\n} from '../actions/types';\n\nconst initialState = {\n    profile: null,\n    profiles: [],\n    repos: [],\n    loading: true,\n    error: {},\n};\n\nfunction profileReducer(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return {\n                ...state,\n                profile: payload,\n                loading: false,\n            };\n        case GET_PROFILES:\n            return {\n                ...state,\n                profiles: payload,\n                loading: false,\n            };\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n                profile: null, // Fix: If a guest user browses a dev profile and then registers, the browsed users profile data is still in the \"profile\" state and the newly registered user then sees and can edit the users info\n            };\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                profile: null,\n                repos: [],\n                loading: false,\n            };\n        case GET_REPOS:\n            return {\n                ...state,\n                repos: payload,\n                loading: false,\n            };\n        default:\n            return state;\n    }\n}\n\nexport default profileReducer;\n","import {\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT,\n} from '../actions/types';\n\nconst initialState = {\n    posts: [],\n    post: null,\n    loading: true,\n    error: {},\n};\n\nfunction postReducer(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_POSTS:\n            return {\n                ...state,\n                posts: payload,\n                loading: false,\n            };\n        case GET_POST:\n            return {\n                ...state,\n                post: payload,\n                loading: false,\n            };\n        case ADD_POST:\n            return {\n                ...state,\n                posts: [payload, ...state.posts],\n                loading: false,\n            };\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter((post) => post._id !== payload),\n                loading: false,\n            };\n        case POST_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n            };\n        case UPDATE_LIKES:\n            return {\n                ...state,\n                posts: state.posts.map((post) =>\n                    post._id === payload.id\n                        ? { ...post, likes: payload.likes }\n                        : post\n                ),\n            };\n        case ADD_COMMENT:\n            return {\n                ...state,\n                post: { ...state.post, comments: payload },\n                loading: false,\n            };\n        case REMOVE_COMMENT:\n            return {\n                ...state,\n                post: {\n                    ...state.post,\n                    comments: state.post.comments.filter(\n                        (comment) => comment._id !== payload\n                    ),\n                },\n                loading: false,\n            };\n        default:\n            return state;\n    }\n}\n\nexport default postReducer;\n","// Our root reducer\n\nimport { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\nimport post from './post';\n\nexport default combineReducers({\n    alert,\n    auth,\n    profile,\n    post,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport setAuthToken from './utils/setAuthToken';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\n// set up a store subscription listener\n// to store the users token in localStorage\n\n// initialize current state from redux store for subscription comparison\n// preventing undefined error\nlet currentState = store.getState();\n\nstore.subscribe(() => {\n    // keep track of the previous and current state to compare changes\n    let previousState = currentState;\n    currentState = store.getState();\n    // if the token changes set the value in localStorage and axios headers\n    if (previousState.auth.token !== currentState.auth.token) {\n        const token = currentState.auth.token;\n        setAuthToken(token);\n    }\n});\n\nexport default store;\n","import React, { Fragment, useEffect } from 'react'; // Fragment won't actually show up in the dom (ghost ele)\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Alert from './components/layout/Alert';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateProfile from './components/profile-forms/CreateProfile';\nimport EditProfile from './components/profile-forms/EditProfile';\nimport AddExperience from './components/profile-forms/AddExperience';\nimport AddEducation from './components/profile-forms/AddEducation';\nimport Profiles from './components/profiles/Profiles';\nimport Profile from './components/profile/Profile';\nimport Developers from './components/profiles/Developers';\nimport Posts from './components/posts/Posts';\nimport Post from './components/post/Post';\n\nimport PrivateRoute from './components/routing/PrivateRoute';\n\n// Redux Stuff\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport './App.css';\n\nif (localStorage.token) {\n    setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n    useEffect(() => {\n        store.dispatch(loadUser());\n    }, []); // If you want to run an effect and mount it only once, you can pass an empty array as a second argument. This tells React that our effect doesn't depend on any values from props or state, so it never needs to re-run\n\n    return (\n        <Provider store={store}>\n            <Router>\n                <Fragment>\n                    <Navbar />\n                    <Route exact path='/' component={Landing} />\n                    <section className='container'>\n                        <Alert />\n                        <Switch>\n                            <Route\n                                exact\n                                path='/register'\n                                component={Register}\n                            />\n                            <Route exact path='/login' component={Login} />\n                            <Route\n                                exact\n                                path='/profiles'\n                                component={Profiles}\n                            />\n                            <Route\n                                exact\n                                path='/profile/:id'\n                                component={Profile}\n                            />\n                            {\n                                <Route\n                                    exact\n                                    path='/developers'\n                                    component={Developers}\n                                />\n                            }\n\n                            <PrivateRoute\n                                exact\n                                path='/dashboard'\n                                component={Dashboard}\n                            />\n                            <PrivateRoute\n                                exact\n                                path='/create-profile'\n                                component={CreateProfile}\n                            />\n                            <PrivateRoute\n                                exact\n                                path='/edit-profile'\n                                component={EditProfile}\n                            />\n                            <PrivateRoute\n                                exact\n                                path='/add-experience'\n                                component={AddExperience}\n                            />\n                            <PrivateRoute\n                                exact\n                                path='/add-education'\n                                component={AddEducation}\n                            />\n                            <PrivateRoute\n                                exact\n                                path='/posts'\n                                component={Posts}\n                            />\n                            <PrivateRoute\n                                exact\n                                path='/posts/:id'\n                                component={Post}\n                            />\n                        </Switch>\n                    </section>\n                </Fragment>\n            </Router>\n        </Provider>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}